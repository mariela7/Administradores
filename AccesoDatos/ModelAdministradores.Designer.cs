//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ControlAdministradoresModel", "FK_Equipos_Agencias", "Agencias", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AccesoDatos.Agencias), "Equipos", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AccesoDatos.Equipos), true)]

#endregion

namespace AccesoDatos
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ControlAdministradoresEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ControlAdministradoresEntities object using the connection string found in the 'ControlAdministradoresEntities' section of the application configuration file.
        /// </summary>
        public ControlAdministradoresEntities() : base("name=ControlAdministradoresEntities", "ControlAdministradoresEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ControlAdministradoresEntities object.
        /// </summary>
        public ControlAdministradoresEntities(string connectionString) : base(connectionString, "ControlAdministradoresEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ControlAdministradoresEntities object.
        /// </summary>
        public ControlAdministradoresEntities(EntityConnection connection) : base(connection, "ControlAdministradoresEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Administradores> Administradores
        {
            get
            {
                if ((_Administradores == null))
                {
                    _Administradores = base.CreateObjectSet<Administradores>("Administradores");
                }
                return _Administradores;
            }
        }
        private ObjectSet<Administradores> _Administradores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdministradoresEscaneados> AdministradoresEscaneados
        {
            get
            {
                if ((_AdministradoresEscaneados == null))
                {
                    _AdministradoresEscaneados = base.CreateObjectSet<AdministradoresEscaneados>("AdministradoresEscaneados");
                }
                return _AdministradoresEscaneados;
            }
        }
        private ObjectSet<AdministradoresEscaneados> _AdministradoresEscaneados;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdministradoresNovedades> AdministradoresNovedades
        {
            get
            {
                if ((_AdministradoresNovedades == null))
                {
                    _AdministradoresNovedades = base.CreateObjectSet<AdministradoresNovedades>("AdministradoresNovedades");
                }
                return _AdministradoresNovedades;
            }
        }
        private ObjectSet<AdministradoresNovedades> _AdministradoresNovedades;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Agencias> Agencias
        {
            get
            {
                if ((_Agencias == null))
                {
                    _Agencias = base.CreateObjectSet<Agencias>("Agencias");
                }
                return _Agencias;
            }
        }
        private ObjectSet<Agencias> _Agencias;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Equipos> Equipos
        {
            get
            {
                if ((_Equipos == null))
                {
                    _Equipos = base.CreateObjectSet<Equipos>("Equipos");
                }
                return _Equipos;
            }
        }
        private ObjectSet<Equipos> _Equipos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquiposEscaneados> EquiposEscaneados
        {
            get
            {
                if ((_EquiposEscaneados == null))
                {
                    _EquiposEscaneados = base.CreateObjectSet<EquiposEscaneados>("EquiposEscaneados");
                }
                return _EquiposEscaneados;
            }
        }
        private ObjectSet<EquiposEscaneados> _EquiposEscaneados;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LogEscaneo> LogEscaneo
        {
            get
            {
                if ((_LogEscaneo == null))
                {
                    _LogEscaneo = base.CreateObjectSet<LogEscaneo>("LogEscaneo");
                }
                return _LogEscaneo;
            }
        }
        private ObjectSet<LogEscaneo> _LogEscaneo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parametros> Parametros
        {
            get
            {
                if ((_Parametros == null))
                {
                    _Parametros = base.CreateObjectSet<Parametros>("Parametros");
                }
                return _Parametros;
            }
        }
        private ObjectSet<Parametros> _Parametros;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquiposNovedadesAntivirus> EquiposNovedadesAntivirus
        {
            get
            {
                if ((_EquiposNovedadesAntivirus == null))
                {
                    _EquiposNovedadesAntivirus = base.CreateObjectSet<EquiposNovedadesAntivirus>("EquiposNovedadesAntivirus");
                }
                return _EquiposNovedadesAntivirus;
            }
        }
        private ObjectSet<EquiposNovedadesAntivirus> _EquiposNovedadesAntivirus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquiposNovedades> EquiposNovedades
        {
            get
            {
                if ((_EquiposNovedades == null))
                {
                    _EquiposNovedades = base.CreateObjectSet<EquiposNovedades>("EquiposNovedades");
                }
                return _EquiposNovedades;
            }
        }
        private ObjectSet<EquiposNovedades> _EquiposNovedades;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LineaBase> LineaBase
        {
            get
            {
                if ((_LineaBase == null))
                {
                    _LineaBase = base.CreateObjectSet<LineaBase>("LineaBase");
                }
                return _LineaBase;
            }
        }
        private ObjectSet<LineaBase> _LineaBase;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CiudadesEcuador> CiudadesEcuador
        {
            get
            {
                if ((_CiudadesEcuador == null))
                {
                    _CiudadesEcuador = base.CreateObjectSet<CiudadesEcuador>("CiudadesEcuador");
                }
                return _CiudadesEcuador;
            }
        }
        private ObjectSet<CiudadesEcuador> _CiudadesEcuador;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProvinciasEcuador> ProvinciasEcuador
        {
            get
            {
                if ((_ProvinciasEcuador == null))
                {
                    _ProvinciasEcuador = base.CreateObjectSet<ProvinciasEcuador>("ProvinciasEcuador");
                }
                return _ProvinciasEcuador;
            }
        }
        private ObjectSet<ProvinciasEcuador> _ProvinciasEcuador;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReporteDetalleEquipos> ReporteDetalleEquipos
        {
            get
            {
                if ((_ReporteDetalleEquipos == null))
                {
                    _ReporteDetalleEquipos = base.CreateObjectSet<ReporteDetalleEquipos>("ReporteDetalleEquipos");
                }
                return _ReporteDetalleEquipos;
            }
        }
        private ObjectSet<ReporteDetalleEquipos> _ReporteDetalleEquipos;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Administradores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdministradores(Administradores administradores)
        {
            base.AddObject("Administradores", administradores);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdministradoresEscaneados EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdministradoresEscaneados(AdministradoresEscaneados administradoresEscaneados)
        {
            base.AddObject("AdministradoresEscaneados", administradoresEscaneados);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdministradoresNovedades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdministradoresNovedades(AdministradoresNovedades administradoresNovedades)
        {
            base.AddObject("AdministradoresNovedades", administradoresNovedades);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Agencias EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAgencias(Agencias agencias)
        {
            base.AddObject("Agencias", agencias);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Equipos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipos(Equipos equipos)
        {
            base.AddObject("Equipos", equipos);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquiposEscaneados EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquiposEscaneados(EquiposEscaneados equiposEscaneados)
        {
            base.AddObject("EquiposEscaneados", equiposEscaneados);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogEscaneo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogEscaneo(LogEscaneo logEscaneo)
        {
            base.AddObject("LogEscaneo", logEscaneo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parametros EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParametros(Parametros parametros)
        {
            base.AddObject("Parametros", parametros);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquiposNovedadesAntivirus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquiposNovedadesAntivirus(EquiposNovedadesAntivirus equiposNovedadesAntivirus)
        {
            base.AddObject("EquiposNovedadesAntivirus", equiposNovedadesAntivirus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquiposNovedades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquiposNovedades(EquiposNovedades equiposNovedades)
        {
            base.AddObject("EquiposNovedades", equiposNovedades);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LineaBase EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLineaBase(LineaBase lineaBase)
        {
            base.AddObject("LineaBase", lineaBase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CiudadesEcuador EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCiudadesEcuador(CiudadesEcuador ciudadesEcuador)
        {
            base.AddObject("CiudadesEcuador", ciudadesEcuador);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProvinciasEcuador EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProvinciasEcuador(ProvinciasEcuador provinciasEcuador)
        {
            base.AddObject("ProvinciasEcuador", provinciasEcuador);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReporteDetalleEquipos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReporteDetalleEquipos(ReporteDetalleEquipos reporteDetalleEquipos)
        {
            base.AddObject("ReporteDetalleEquipos", reporteDetalleEquipos);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="grupo">No Metadata Documentation available.</param>
        public ObjectResult<Agencias> AgenciasObtenerEscaneoDiario(Nullable<global::System.Int32> grupo)
        {
            ObjectParameter grupoParameter;
            if (grupo.HasValue)
            {
                grupoParameter = new ObjectParameter("Grupo", grupo);
            }
            else
            {
                grupoParameter = new ObjectParameter("Grupo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Agencias>("AgenciasObtenerEscaneoDiario", grupoParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="grupo">No Metadata Documentation available.</param>
        public ObjectResult<Agencias> AgenciasObtenerEscaneoDiario(Nullable<global::System.Int32> grupo, MergeOption mergeOption)
        {
            ObjectParameter grupoParameter;
            if (grupo.HasValue)
            {
                grupoParameter = new ObjectParameter("Grupo", grupo);
            }
            else
            {
                grupoParameter = new ObjectParameter("Grupo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Agencias>("AgenciasObtenerEscaneoDiario", mergeOption, grupoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="codigoParametro">No Metadata Documentation available.</param>
        public ObjectResult<Parametros> ParametrosObtenerValorParametroPorCodigo(global::System.String codigoParametro)
        {
            ObjectParameter codigoParametroParameter;
            if (codigoParametro != null)
            {
                codigoParametroParameter = new ObjectParameter("CodigoParametro", codigoParametro);
            }
            else
            {
                codigoParametroParameter = new ObjectParameter("CodigoParametro", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Parametros>("ParametrosObtenerValorParametroPorCodigo", codigoParametroParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="codigoParametro">No Metadata Documentation available.</param>
        public ObjectResult<Parametros> ParametrosObtenerValorParametroPorCodigo(global::System.String codigoParametro, MergeOption mergeOption)
        {
            ObjectParameter codigoParametroParameter;
            if (codigoParametro != null)
            {
                codigoParametroParameter = new ObjectParameter("CodigoParametro", codigoParametro);
            }
            else
            {
                codigoParametroParameter = new ObjectParameter("CodigoParametro", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Parametros>("ParametrosObtenerValorParametroPorCodigo", mergeOption, codigoParametroParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idMaquina">No Metadata Documentation available.</param>
        /// <param name="administrador">No Metadata Documentation available.</param>
        public int AdministradoresInsertar(Nullable<global::System.Int32> idMaquina, global::System.String administrador)
        {
            ObjectParameter idMaquinaParameter;
            if (idMaquina.HasValue)
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", idMaquina);
            }
            else
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", typeof(global::System.Int32));
            }
    
            ObjectParameter administradorParameter;
            if (administrador != null)
            {
                administradorParameter = new ObjectParameter("Administrador", administrador);
            }
            else
            {
                administradorParameter = new ObjectParameter("Administrador", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AdministradoresInsertar", idMaquinaParameter, administradorParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ip">No Metadata Documentation available.</param>
        /// <param name="equipo">No Metadata Documentation available.</param>
        /// <param name="sistemaOperativo">No Metadata Documentation available.</param>
        /// <param name="ultimoUsuarioLogeado">No Metadata Documentation available.</param>
        /// <param name="antivirus">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> EquiposInsertar(global::System.String ip, global::System.String equipo, global::System.String sistemaOperativo, global::System.String ultimoUsuarioLogeado, Nullable<global::System.Int32> antivirus)
        {
            ObjectParameter ipParameter;
            if (ip != null)
            {
                ipParameter = new ObjectParameter("Ip", ip);
            }
            else
            {
                ipParameter = new ObjectParameter("Ip", typeof(global::System.String));
            }
    
            ObjectParameter equipoParameter;
            if (equipo != null)
            {
                equipoParameter = new ObjectParameter("Equipo", equipo);
            }
            else
            {
                equipoParameter = new ObjectParameter("Equipo", typeof(global::System.String));
            }
    
            ObjectParameter sistemaOperativoParameter;
            if (sistemaOperativo != null)
            {
                sistemaOperativoParameter = new ObjectParameter("SistemaOperativo", sistemaOperativo);
            }
            else
            {
                sistemaOperativoParameter = new ObjectParameter("SistemaOperativo", typeof(global::System.String));
            }
    
            ObjectParameter ultimoUsuarioLogeadoParameter;
            if (ultimoUsuarioLogeado != null)
            {
                ultimoUsuarioLogeadoParameter = new ObjectParameter("UltimoUsuarioLogeado", ultimoUsuarioLogeado);
            }
            else
            {
                ultimoUsuarioLogeadoParameter = new ObjectParameter("UltimoUsuarioLogeado", typeof(global::System.String));
            }
    
            ObjectParameter antivirusParameter;
            if (antivirus.HasValue)
            {
                antivirusParameter = new ObjectParameter("Antivirus", antivirus);
            }
            else
            {
                antivirusParameter = new ObjectParameter("Antivirus", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("EquiposInsertar", ipParameter, equipoParameter, sistemaOperativoParameter, ultimoUsuarioLogeadoParameter, antivirusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="administradoresEscaneados">No Metadata Documentation available.</param>
        /// <param name="idMaquina">No Metadata Documentation available.</param>
        public int EquiposAdministradoresEscaneados(global::System.String administradoresEscaneados, Nullable<global::System.Int32> idMaquina)
        {
            ObjectParameter administradoresEscaneadosParameter;
            if (administradoresEscaneados != null)
            {
                administradoresEscaneadosParameter = new ObjectParameter("AdministradoresEscaneados", administradoresEscaneados);
            }
            else
            {
                administradoresEscaneadosParameter = new ObjectParameter("AdministradoresEscaneados", typeof(global::System.String));
            }
    
            ObjectParameter idMaquinaParameter;
            if (idMaquina.HasValue)
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", idMaquina);
            }
            else
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("EquiposAdministradoresEscaneados", administradoresEscaneadosParameter, idMaquinaParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="segmentoEscaneado">No Metadata Documentation available.</param>
        /// <param name="accion">No Metadata Documentation available.</param>
        /// <param name="tTL">No Metadata Documentation available.</param>
        public int LogEscaneoInsertar(global::System.String segmentoEscaneado, global::System.String accion, Nullable<global::System.Int32> tTL)
        {
            ObjectParameter segmentoEscaneadoParameter;
            if (segmentoEscaneado != null)
            {
                segmentoEscaneadoParameter = new ObjectParameter("SegmentoEscaneado", segmentoEscaneado);
            }
            else
            {
                segmentoEscaneadoParameter = new ObjectParameter("SegmentoEscaneado", typeof(global::System.String));
            }
    
            ObjectParameter accionParameter;
            if (accion != null)
            {
                accionParameter = new ObjectParameter("Accion", accion);
            }
            else
            {
                accionParameter = new ObjectParameter("Accion", typeof(global::System.String));
            }
    
            ObjectParameter tTLParameter;
            if (tTL.HasValue)
            {
                tTLParameter = new ObjectParameter("TTL", tTL);
            }
            else
            {
                tTLParameter = new ObjectParameter("TTL", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("LogEscaneoInsertar", segmentoEscaneadoParameter, accionParameter, tTLParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idMaquina">No Metadata Documentation available.</param>
        /// <param name="administrador">No Metadata Documentation available.</param>
        public int AdministradoresEscaneadosInsertar(Nullable<global::System.Int32> idMaquina, global::System.String administrador)
        {
            ObjectParameter idMaquinaParameter;
            if (idMaquina.HasValue)
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", idMaquina);
            }
            else
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", typeof(global::System.Int32));
            }
    
            ObjectParameter administradorParameter;
            if (administrador != null)
            {
                administradorParameter = new ObjectParameter("Administrador", administrador);
            }
            else
            {
                administradorParameter = new ObjectParameter("Administrador", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AdministradoresEscaneadosInsertar", idMaquinaParameter, administradorParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="administradoresEscaneados">No Metadata Documentation available.</param>
        /// <param name="idMaquina">No Metadata Documentation available.</param>
        public int EquiposEscaneados_AdministradoresEscaneados(global::System.String administradoresEscaneados, Nullable<global::System.Int32> idMaquina)
        {
            ObjectParameter administradoresEscaneadosParameter;
            if (administradoresEscaneados != null)
            {
                administradoresEscaneadosParameter = new ObjectParameter("AdministradoresEscaneados", administradoresEscaneados);
            }
            else
            {
                administradoresEscaneadosParameter = new ObjectParameter("AdministradoresEscaneados", typeof(global::System.String));
            }
    
            ObjectParameter idMaquinaParameter;
            if (idMaquina.HasValue)
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", idMaquina);
            }
            else
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("EquiposEscaneados_AdministradoresEscaneados", administradoresEscaneadosParameter, idMaquinaParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ip">No Metadata Documentation available.</param>
        /// <param name="equipo">No Metadata Documentation available.</param>
        /// <param name="sistemaOperativo">No Metadata Documentation available.</param>
        /// <param name="ultimoUsuarioLogeado">No Metadata Documentation available.</param>
        /// <param name="antivirus">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> EquiposEscaneados_Insertar(global::System.String ip, global::System.String equipo, global::System.String sistemaOperativo, global::System.String ultimoUsuarioLogeado, Nullable<global::System.Int32> antivirus)
        {
            ObjectParameter ipParameter;
            if (ip != null)
            {
                ipParameter = new ObjectParameter("Ip", ip);
            }
            else
            {
                ipParameter = new ObjectParameter("Ip", typeof(global::System.String));
            }
    
            ObjectParameter equipoParameter;
            if (equipo != null)
            {
                equipoParameter = new ObjectParameter("Equipo", equipo);
            }
            else
            {
                equipoParameter = new ObjectParameter("Equipo", typeof(global::System.String));
            }
    
            ObjectParameter sistemaOperativoParameter;
            if (sistemaOperativo != null)
            {
                sistemaOperativoParameter = new ObjectParameter("SistemaOperativo", sistemaOperativo);
            }
            else
            {
                sistemaOperativoParameter = new ObjectParameter("SistemaOperativo", typeof(global::System.String));
            }
    
            ObjectParameter ultimoUsuarioLogeadoParameter;
            if (ultimoUsuarioLogeado != null)
            {
                ultimoUsuarioLogeadoParameter = new ObjectParameter("UltimoUsuarioLogeado", ultimoUsuarioLogeado);
            }
            else
            {
                ultimoUsuarioLogeadoParameter = new ObjectParameter("UltimoUsuarioLogeado", typeof(global::System.String));
            }
    
            ObjectParameter antivirusParameter;
            if (antivirus.HasValue)
            {
                antivirusParameter = new ObjectParameter("Antivirus", antivirus);
            }
            else
            {
                antivirusParameter = new ObjectParameter("Antivirus", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("EquiposEscaneados_Insertar", ipParameter, equipoParameter, sistemaOperativoParameter, ultimoUsuarioLogeadoParameter, antivirusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<AdministradoresNovedades> AdministradoresNovedadesSelect()
        {
            return base.ExecuteFunction<AdministradoresNovedades>("AdministradoresNovedadesSelect");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<AdministradoresNovedades> AdministradoresNovedadesSelect(MergeOption mergeOption)
        {
            return base.ExecuteFunction<AdministradoresNovedades>("AdministradoresNovedadesSelect", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAgencia">No Metadata Documentation available.</param>
        public ObjectResult<Agencias> AgenciasSelectByIdAgencia(Nullable<global::System.Int32> idAgencia)
        {
            ObjectParameter idAgenciaParameter;
            if (idAgencia.HasValue)
            {
                idAgenciaParameter = new ObjectParameter("IdAgencia", idAgencia);
            }
            else
            {
                idAgenciaParameter = new ObjectParameter("IdAgencia", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Agencias>("AgenciasSelectByIdAgencia", idAgenciaParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idAgencia">No Metadata Documentation available.</param>
        public ObjectResult<Agencias> AgenciasSelectByIdAgencia(Nullable<global::System.Int32> idAgencia, MergeOption mergeOption)
        {
            ObjectParameter idAgenciaParameter;
            if (idAgencia.HasValue)
            {
                idAgenciaParameter = new ObjectParameter("IdAgencia", idAgencia);
            }
            else
            {
                idAgenciaParameter = new ObjectParameter("IdAgencia", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Agencias>("AgenciasSelectByIdAgencia", mergeOption, idAgenciaParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<EquiposNovedades> EquiposNovedadesSelect()
        {
            return base.ExecuteFunction<EquiposNovedades>("EquiposNovedadesSelect");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<EquiposNovedades> EquiposNovedadesSelect(MergeOption mergeOption)
        {
            return base.ExecuteFunction<EquiposNovedades>("EquiposNovedadesSelect", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="equipo">No Metadata Documentation available.</param>
        public ObjectResult<Equipos> EquiposSelectByEquipo(global::System.String equipo)
        {
            ObjectParameter equipoParameter;
            if (equipo != null)
            {
                equipoParameter = new ObjectParameter("Equipo", equipo);
            }
            else
            {
                equipoParameter = new ObjectParameter("Equipo", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Equipos>("EquiposSelectByEquipo", equipoParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="equipo">No Metadata Documentation available.</param>
        public ObjectResult<Equipos> EquiposSelectByEquipo(global::System.String equipo, MergeOption mergeOption)
        {
            ObjectParameter equipoParameter;
            if (equipo != null)
            {
                equipoParameter = new ObjectParameter("Equipo", equipo);
            }
            else
            {
                equipoParameter = new ObjectParameter("Equipo", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Equipos>("EquiposSelectByEquipo", mergeOption, equipoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idMaquina">No Metadata Documentation available.</param>
        /// <param name="administrador">No Metadata Documentation available.</param>
        public int AdministradoresEliminar(Nullable<global::System.Int32> idMaquina, global::System.String administrador)
        {
            ObjectParameter idMaquinaParameter;
            if (idMaquina.HasValue)
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", idMaquina);
            }
            else
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", typeof(global::System.Int32));
            }
    
            ObjectParameter administradorParameter;
            if (administrador != null)
            {
                administradorParameter = new ObjectParameter("Administrador", administrador);
            }
            else
            {
                administradorParameter = new ObjectParameter("Administrador", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AdministradoresEliminar", idMaquinaParameter, administradorParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idMaquina">No Metadata Documentation available.</param>
        /// <param name="administrador">No Metadata Documentation available.</param>
        public int AdministradoresNovedadesEliminar(Nullable<global::System.Int32> idMaquina, global::System.String administrador)
        {
            ObjectParameter idMaquinaParameter;
            if (idMaquina.HasValue)
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", idMaquina);
            }
            else
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", typeof(global::System.Int32));
            }
    
            ObjectParameter administradorParameter;
            if (administrador != null)
            {
                administradorParameter = new ObjectParameter("Administrador", administrador);
            }
            else
            {
                administradorParameter = new ObjectParameter("Administrador", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("AdministradoresNovedadesEliminar", idMaquinaParameter, administradorParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="equipo">No Metadata Documentation available.</param>
        /// <param name="administrador">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> AdministradorEstaExepcionado(global::System.String equipo, global::System.String administrador)
        {
            ObjectParameter equipoParameter;
            if (equipo != null)
            {
                equipoParameter = new ObjectParameter("Equipo", equipo);
            }
            else
            {
                equipoParameter = new ObjectParameter("Equipo", typeof(global::System.String));
            }
    
            ObjectParameter administradorParameter;
            if (administrador != null)
            {
                administradorParameter = new ObjectParameter("Administrador", administrador);
            }
            else
            {
                administradorParameter = new ObjectParameter("Administrador", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("AdministradorEstaExepcionado", equipoParameter, administradorParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idMaquina">No Metadata Documentation available.</param>
        /// <param name="ip">No Metadata Documentation available.</param>
        /// <param name="equipo">No Metadata Documentation available.</param>
        /// <param name="sistemaOperativo">No Metadata Documentation available.</param>
        /// <param name="ultimoUsuarioLogeado">No Metadata Documentation available.</param>
        /// <param name="administrador">No Metadata Documentation available.</param>
        /// <param name="fecha">No Metadata Documentation available.</param>
        /// <param name="accion">No Metadata Documentation available.</param>
        /// <param name="antivirus">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> HistoricosDepurados_Insertar(Nullable<global::System.Int32> idMaquina, global::System.String ip, global::System.String equipo, global::System.String sistemaOperativo, global::System.String ultimoUsuarioLogeado, global::System.String administrador, Nullable<global::System.DateTime> fecha, global::System.String accion, Nullable<global::System.Int32> antivirus)
        {
            ObjectParameter idMaquinaParameter;
            if (idMaquina.HasValue)
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", idMaquina);
            }
            else
            {
                idMaquinaParameter = new ObjectParameter("IdMaquina", typeof(global::System.Int32));
            }
    
            ObjectParameter ipParameter;
            if (ip != null)
            {
                ipParameter = new ObjectParameter("Ip", ip);
            }
            else
            {
                ipParameter = new ObjectParameter("Ip", typeof(global::System.String));
            }
    
            ObjectParameter equipoParameter;
            if (equipo != null)
            {
                equipoParameter = new ObjectParameter("Equipo", equipo);
            }
            else
            {
                equipoParameter = new ObjectParameter("Equipo", typeof(global::System.String));
            }
    
            ObjectParameter sistemaOperativoParameter;
            if (sistemaOperativo != null)
            {
                sistemaOperativoParameter = new ObjectParameter("SistemaOperativo", sistemaOperativo);
            }
            else
            {
                sistemaOperativoParameter = new ObjectParameter("SistemaOperativo", typeof(global::System.String));
            }
    
            ObjectParameter ultimoUsuarioLogeadoParameter;
            if (ultimoUsuarioLogeado != null)
            {
                ultimoUsuarioLogeadoParameter = new ObjectParameter("UltimoUsuarioLogeado", ultimoUsuarioLogeado);
            }
            else
            {
                ultimoUsuarioLogeadoParameter = new ObjectParameter("UltimoUsuarioLogeado", typeof(global::System.String));
            }
    
            ObjectParameter administradorParameter;
            if (administrador != null)
            {
                administradorParameter = new ObjectParameter("Administrador", administrador);
            }
            else
            {
                administradorParameter = new ObjectParameter("Administrador", typeof(global::System.String));
            }
    
            ObjectParameter fechaParameter;
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("Fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("Fecha", typeof(global::System.DateTime));
            }
    
            ObjectParameter accionParameter;
            if (accion != null)
            {
                accionParameter = new ObjectParameter("Accion", accion);
            }
            else
            {
                accionParameter = new ObjectParameter("Accion", typeof(global::System.String));
            }
    
            ObjectParameter antivirusParameter;
            if (antivirus.HasValue)
            {
                antivirusParameter = new ObjectParameter("Antivirus", antivirus);
            }
            else
            {
                antivirusParameter = new ObjectParameter("Antivirus", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("HistoricosDepurados_Insertar", idMaquinaParameter, ipParameter, equipoParameter, sistemaOperativoParameter, ultimoUsuarioLogeadoParameter, administradorParameter, fechaParameter, accionParameter, antivirusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int EquiposNovedadesSelect_Antivirus()
        {
            return base.ExecuteFunction("EquiposNovedadesSelect_Antivirus");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<EquiposNovedadesAntivirus> EquiposNovedadesAntivirus_Select()
        {
            return base.ExecuteFunction<EquiposNovedadesAntivirus>("EquiposNovedadesAntivirus_Select");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<EquiposNovedadesAntivirus> EquiposNovedadesAntivirus_Select(MergeOption mergeOption)
        {
            return base.ExecuteFunction<EquiposNovedadesAntivirus>("EquiposNovedadesAntivirus_Select", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="equipo">No Metadata Documentation available.</param>
        /// <param name="administrador">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> AdministradorEliminadoAntes(global::System.String equipo, global::System.String administrador)
        {
            ObjectParameter equipoParameter;
            if (equipo != null)
            {
                equipoParameter = new ObjectParameter("Equipo", equipo);
            }
            else
            {
                equipoParameter = new ObjectParameter("Equipo", typeof(global::System.String));
            }
    
            ObjectParameter administradorParameter;
            if (administrador != null)
            {
                administradorParameter = new ObjectParameter("Administrador", administrador);
            }
            else
            {
                administradorParameter = new ObjectParameter("Administrador", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("AdministradorEliminadoAntes", equipoParameter, administradorParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="ip">No Metadata Documentation available.</param>
        /// <param name="equipo">No Metadata Documentation available.</param>
        /// <param name="sistemaOperativo">No Metadata Documentation available.</param>
        /// <param name="ultimoUsuarioLogeado">No Metadata Documentation available.</param>
        /// <param name="antivirus">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> EquiposModificar(global::System.String ip, global::System.String equipo, global::System.String sistemaOperativo, global::System.String ultimoUsuarioLogeado, Nullable<global::System.Int32> antivirus)
        {
            ObjectParameter ipParameter;
            if (ip != null)
            {
                ipParameter = new ObjectParameter("Ip", ip);
            }
            else
            {
                ipParameter = new ObjectParameter("Ip", typeof(global::System.String));
            }
    
            ObjectParameter equipoParameter;
            if (equipo != null)
            {
                equipoParameter = new ObjectParameter("Equipo", equipo);
            }
            else
            {
                equipoParameter = new ObjectParameter("Equipo", typeof(global::System.String));
            }
    
            ObjectParameter sistemaOperativoParameter;
            if (sistemaOperativo != null)
            {
                sistemaOperativoParameter = new ObjectParameter("SistemaOperativo", sistemaOperativo);
            }
            else
            {
                sistemaOperativoParameter = new ObjectParameter("SistemaOperativo", typeof(global::System.String));
            }
    
            ObjectParameter ultimoUsuarioLogeadoParameter;
            if (ultimoUsuarioLogeado != null)
            {
                ultimoUsuarioLogeadoParameter = new ObjectParameter("UltimoUsuarioLogeado", ultimoUsuarioLogeado);
            }
            else
            {
                ultimoUsuarioLogeadoParameter = new ObjectParameter("UltimoUsuarioLogeado", typeof(global::System.String));
            }
    
            ObjectParameter antivirusParameter;
            if (antivirus.HasValue)
            {
                antivirusParameter = new ObjectParameter("Antivirus", antivirus);
            }
            else
            {
                antivirusParameter = new ObjectParameter("Antivirus", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("EquiposModificar", ipParameter, equipoParameter, sistemaOperativoParameter, ultimoUsuarioLogeadoParameter, antivirusParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Reporte_EquiposPorAgenciaTotal> Reporte_EquiposPorAgencia_total()
        {
            return base.ExecuteFunction<Reporte_EquiposPorAgenciaTotal>("Reporte_EquiposPorAgencia_total");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idProvincia">No Metadata Documentation available.</param>
        public ObjectResult<CiudadesEcuador> CiudadesSelectByIdProvincia(Nullable<global::System.Int32> idProvincia)
        {
            ObjectParameter idProvinciaParameter;
            if (idProvincia.HasValue)
            {
                idProvinciaParameter = new ObjectParameter("IdProvincia", idProvincia);
            }
            else
            {
                idProvinciaParameter = new ObjectParameter("IdProvincia", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<CiudadesEcuador>("CiudadesSelectByIdProvincia", idProvinciaParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="idProvincia">No Metadata Documentation available.</param>
        public ObjectResult<CiudadesEcuador> CiudadesSelectByIdProvincia(Nullable<global::System.Int32> idProvincia, MergeOption mergeOption)
        {
            ObjectParameter idProvinciaParameter;
            if (idProvincia.HasValue)
            {
                idProvinciaParameter = new ObjectParameter("IdProvincia", idProvincia);
            }
            else
            {
                idProvinciaParameter = new ObjectParameter("IdProvincia", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<CiudadesEcuador>("CiudadesSelectByIdProvincia", mergeOption, idProvinciaParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ProvinciasEcuador> ProvinciasSelectAll()
        {
            return base.ExecuteFunction<ProvinciasEcuador>("ProvinciasSelectAll");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<ProvinciasEcuador> ProvinciasSelectAll(MergeOption mergeOption)
        {
            return base.ExecuteFunction<ProvinciasEcuador>("ProvinciasSelectAll", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="subred">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> AgenciaSubredExiste(global::System.String subred)
        {
            ObjectParameter subredParameter;
            if (subred != null)
            {
                subredParameter = new ObjectParameter("Subred", subred);
            }
            else
            {
                subredParameter = new ObjectParameter("Subred", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("AgenciaSubredExiste", subredParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nombreAgencia">No Metadata Documentation available.</param>
        /// <param name="ciudad">No Metadata Documentation available.</param>
        /// <param name="provincia">No Metadata Documentation available.</param>
        /// <param name="subred">No Metadata Documentation available.</param>
        /// <param name="grupo">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> AgenciasInsertar(global::System.String nombreAgencia, global::System.String ciudad, global::System.String provincia, global::System.String subred, Nullable<global::System.Int32> grupo)
        {
            ObjectParameter nombreAgenciaParameter;
            if (nombreAgencia != null)
            {
                nombreAgenciaParameter = new ObjectParameter("NombreAgencia", nombreAgencia);
            }
            else
            {
                nombreAgenciaParameter = new ObjectParameter("NombreAgencia", typeof(global::System.String));
            }
    
            ObjectParameter ciudadParameter;
            if (ciudad != null)
            {
                ciudadParameter = new ObjectParameter("Ciudad", ciudad);
            }
            else
            {
                ciudadParameter = new ObjectParameter("Ciudad", typeof(global::System.String));
            }
    
            ObjectParameter provinciaParameter;
            if (provincia != null)
            {
                provinciaParameter = new ObjectParameter("Provincia", provincia);
            }
            else
            {
                provinciaParameter = new ObjectParameter("Provincia", typeof(global::System.String));
            }
    
            ObjectParameter subredParameter;
            if (subred != null)
            {
                subredParameter = new ObjectParameter("Subred", subred);
            }
            else
            {
                subredParameter = new ObjectParameter("Subred", typeof(global::System.String));
            }
    
            ObjectParameter grupoParameter;
            if (grupo.HasValue)
            {
                grupoParameter = new ObjectParameter("Grupo", grupo);
            }
            else
            {
                grupoParameter = new ObjectParameter("Grupo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("AgenciasInsertar", nombreAgenciaParameter, ciudadParameter, provinciaParameter, subredParameter, grupoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="estado">No Metadata Documentation available.</param>
        /// <param name="provincia">No Metadata Documentation available.</param>
        /// <param name="ciudad">No Metadata Documentation available.</param>
        public ObjectResult<Agencias> Agencias_HabilitadasDeshabilitadas(Nullable<global::System.Boolean> estado, global::System.String provincia, global::System.String ciudad)
        {
            ObjectParameter estadoParameter;
            if (estado.HasValue)
            {
                estadoParameter = new ObjectParameter("Estado", estado);
            }
            else
            {
                estadoParameter = new ObjectParameter("Estado", typeof(global::System.Boolean));
            }
    
            ObjectParameter provinciaParameter;
            if (provincia != null)
            {
                provinciaParameter = new ObjectParameter("Provincia", provincia);
            }
            else
            {
                provinciaParameter = new ObjectParameter("Provincia", typeof(global::System.String));
            }
    
            ObjectParameter ciudadParameter;
            if (ciudad != null)
            {
                ciudadParameter = new ObjectParameter("Ciudad", ciudad);
            }
            else
            {
                ciudadParameter = new ObjectParameter("Ciudad", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Agencias>("Agencias_HabilitadasDeshabilitadas", estadoParameter, provinciaParameter, ciudadParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="estado">No Metadata Documentation available.</param>
        /// <param name="provincia">No Metadata Documentation available.</param>
        /// <param name="ciudad">No Metadata Documentation available.</param>
        public ObjectResult<Agencias> Agencias_HabilitadasDeshabilitadas(Nullable<global::System.Boolean> estado, global::System.String provincia, global::System.String ciudad, MergeOption mergeOption)
        {
            ObjectParameter estadoParameter;
            if (estado.HasValue)
            {
                estadoParameter = new ObjectParameter("Estado", estado);
            }
            else
            {
                estadoParameter = new ObjectParameter("Estado", typeof(global::System.Boolean));
            }
    
            ObjectParameter provinciaParameter;
            if (provincia != null)
            {
                provinciaParameter = new ObjectParameter("Provincia", provincia);
            }
            else
            {
                provinciaParameter = new ObjectParameter("Provincia", typeof(global::System.String));
            }
    
            ObjectParameter ciudadParameter;
            if (ciudad != null)
            {
                ciudadParameter = new ObjectParameter("Ciudad", ciudad);
            }
            else
            {
                ciudadParameter = new ObjectParameter("Ciudad", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Agencias>("Agencias_HabilitadasDeshabilitadas", mergeOption, estadoParameter, provinciaParameter, ciudadParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="estado">No Metadata Documentation available.</param>
        /// <param name="idProvincia">No Metadata Documentation available.</param>
        public ObjectResult<CiudadesEcuador> Ciudades_HabilitadasDeshabilitadas(Nullable<global::System.Boolean> estado, Nullable<global::System.Int32> idProvincia)
        {
            ObjectParameter estadoParameter;
            if (estado.HasValue)
            {
                estadoParameter = new ObjectParameter("Estado", estado);
            }
            else
            {
                estadoParameter = new ObjectParameter("Estado", typeof(global::System.Boolean));
            }
    
            ObjectParameter idProvinciaParameter;
            if (idProvincia.HasValue)
            {
                idProvinciaParameter = new ObjectParameter("IdProvincia", idProvincia);
            }
            else
            {
                idProvinciaParameter = new ObjectParameter("IdProvincia", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<CiudadesEcuador>("Ciudades_HabilitadasDeshabilitadas", estadoParameter, idProvinciaParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="estado">No Metadata Documentation available.</param>
        /// <param name="idProvincia">No Metadata Documentation available.</param>
        public ObjectResult<CiudadesEcuador> Ciudades_HabilitadasDeshabilitadas(Nullable<global::System.Boolean> estado, Nullable<global::System.Int32> idProvincia, MergeOption mergeOption)
        {
            ObjectParameter estadoParameter;
            if (estado.HasValue)
            {
                estadoParameter = new ObjectParameter("Estado", estado);
            }
            else
            {
                estadoParameter = new ObjectParameter("Estado", typeof(global::System.Boolean));
            }
    
            ObjectParameter idProvinciaParameter;
            if (idProvincia.HasValue)
            {
                idProvinciaParameter = new ObjectParameter("IdProvincia", idProvincia);
            }
            else
            {
                idProvinciaParameter = new ObjectParameter("IdProvincia", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<CiudadesEcuador>("Ciudades_HabilitadasDeshabilitadas", mergeOption, estadoParameter, idProvinciaParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="estado">No Metadata Documentation available.</param>
        public ObjectResult<ProvinciasEcuador> Provincias_HabilitadasDeshabilitadas(Nullable<global::System.Boolean> estado)
        {
            ObjectParameter estadoParameter;
            if (estado.HasValue)
            {
                estadoParameter = new ObjectParameter("Estado", estado);
            }
            else
            {
                estadoParameter = new ObjectParameter("Estado", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<ProvinciasEcuador>("Provincias_HabilitadasDeshabilitadas", estadoParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="estado">No Metadata Documentation available.</param>
        public ObjectResult<ProvinciasEcuador> Provincias_HabilitadasDeshabilitadas(Nullable<global::System.Boolean> estado, MergeOption mergeOption)
        {
            ObjectParameter estadoParameter;
            if (estado.HasValue)
            {
                estadoParameter = new ObjectParameter("Estado", estado);
            }
            else
            {
                estadoParameter = new ObjectParameter("Estado", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<ProvinciasEcuador>("Provincias_HabilitadasDeshabilitadas", mergeOption, estadoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAgencia">No Metadata Documentation available.</param>
        /// <param name="estado">No Metadata Documentation available.</param>
        public int Agencias_HabilitarDeshabilitar(Nullable<global::System.Int32> idAgencia, Nullable<global::System.Boolean> estado)
        {
            ObjectParameter idAgenciaParameter;
            if (idAgencia.HasValue)
            {
                idAgenciaParameter = new ObjectParameter("IdAgencia", idAgencia);
            }
            else
            {
                idAgenciaParameter = new ObjectParameter("IdAgencia", typeof(global::System.Int32));
            }
    
            ObjectParameter estadoParameter;
            if (estado.HasValue)
            {
                estadoParameter = new ObjectParameter("Estado", estado);
            }
            else
            {
                estadoParameter = new ObjectParameter("Estado", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction("Agencias_HabilitarDeshabilitar", idAgenciaParameter, estadoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Grupos_SelectAll> Grupos_SelectAll()
        {
            return base.ExecuteFunction<Grupos_SelectAll>("Grupos_SelectAll");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="grupo">No Metadata Documentation available.</param>
        public ObjectResult<Agencias> Agencias_SelectByGrupo(Nullable<global::System.Int32> grupo)
        {
            ObjectParameter grupoParameter;
            if (grupo.HasValue)
            {
                grupoParameter = new ObjectParameter("Grupo", grupo);
            }
            else
            {
                grupoParameter = new ObjectParameter("Grupo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Agencias>("Agencias_SelectByGrupo", grupoParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="grupo">No Metadata Documentation available.</param>
        public ObjectResult<Agencias> Agencias_SelectByGrupo(Nullable<global::System.Int32> grupo, MergeOption mergeOption)
        {
            ObjectParameter grupoParameter;
            if (grupo.HasValue)
            {
                grupoParameter = new ObjectParameter("Grupo", grupo);
            }
            else
            {
                grupoParameter = new ObjectParameter("Grupo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Agencias>("Agencias_SelectByGrupo", mergeOption, grupoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Agencias> AgenciasObtenerActivas()
        {
            return base.ExecuteFunction<Agencias>("AgenciasObtenerActivas");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Agencias> AgenciasObtenerActivas(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Agencias>("AgenciasObtenerActivas", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idAgencia">No Metadata Documentation available.</param>
        /// <param name="grupo">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> Agencias_UpdateGrupo(Nullable<global::System.Int32> idAgencia, Nullable<global::System.Int32> grupo)
        {
            ObjectParameter idAgenciaParameter;
            if (idAgencia.HasValue)
            {
                idAgenciaParameter = new ObjectParameter("IdAgencia", idAgencia);
            }
            else
            {
                idAgenciaParameter = new ObjectParameter("IdAgencia", typeof(global::System.Int32));
            }
    
            ObjectParameter grupoParameter;
            if (grupo.HasValue)
            {
                grupoParameter = new ObjectParameter("Grupo", grupo);
            }
            else
            {
                grupoParameter = new ObjectParameter("Grupo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("Agencias_UpdateGrupo", idAgenciaParameter, grupoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Reporte_AdministradoresNovedades_All> Reporte_AdministradoresNovedades_All()
        {
            return base.ExecuteFunction<Reporte_AdministradoresNovedades_All>("Reporte_AdministradoresNovedades_All");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="equipo">No Metadata Documentation available.</param>
        /// <param name="administrador">No Metadata Documentation available.</param>
        public ObjectResult<Reporte_AdministradoresNovedades_ByEquipoYAdmin> Reporte_AdministradoresNovedades_ByEquipoYAdmin(global::System.String equipo, global::System.String administrador)
        {
            ObjectParameter equipoParameter;
            if (equipo != null)
            {
                equipoParameter = new ObjectParameter("Equipo", equipo);
            }
            else
            {
                equipoParameter = new ObjectParameter("Equipo", typeof(global::System.String));
            }
    
            ObjectParameter administradorParameter;
            if (administrador != null)
            {
                administradorParameter = new ObjectParameter("Administrador", administrador);
            }
            else
            {
                administradorParameter = new ObjectParameter("Administrador", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Reporte_AdministradoresNovedades_ByEquipoYAdmin>("Reporte_AdministradoresNovedades_ByEquipoYAdmin", equipoParameter, administradorParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mes">No Metadata Documentation available.</param>
        /// <param name="ano">No Metadata Documentation available.</param>
        public ObjectResult<Reporte_AdmisAdd_Mensual> Reporte_AdmisAdd_Mensual(Nullable<global::System.Int32> mes, Nullable<global::System.Int32> ano)
        {
            ObjectParameter mesParameter;
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("Mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("Mes", typeof(global::System.Int32));
            }
    
            ObjectParameter anoParameter;
            if (ano.HasValue)
            {
                anoParameter = new ObjectParameter("Ano", ano);
            }
            else
            {
                anoParameter = new ObjectParameter("Ano", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Reporte_AdmisAdd_Mensual>("Reporte_AdmisAdd_Mensual", mesParameter, anoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mes">No Metadata Documentation available.</param>
        /// <param name="ano">No Metadata Documentation available.</param>
        public ObjectResult<Reporte_AdministradoresNovedades_All> Reporte_AdministradoresNovedades_Mensual(Nullable<global::System.Int32> mes, Nullable<global::System.Int32> ano)
        {
            ObjectParameter mesParameter;
            if (mes.HasValue)
            {
                mesParameter = new ObjectParameter("Mes", mes);
            }
            else
            {
                mesParameter = new ObjectParameter("Mes", typeof(global::System.Int32));
            }
    
            ObjectParameter anoParameter;
            if (ano.HasValue)
            {
                anoParameter = new ObjectParameter("Ano", ano);
            }
            else
            {
                anoParameter = new ObjectParameter("Ano", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Reporte_AdministradoresNovedades_All>("Reporte_AdministradoresNovedades_Mensual", mesParameter, anoParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fecha">No Metadata Documentation available.</param>
        public ObjectResult<Log_RevisionEjecucion> Log_RevisionEjecucion(Nullable<global::System.DateTime> fecha)
        {
            ObjectParameter fechaParameter;
            if (fecha.HasValue)
            {
                fechaParameter = new ObjectParameter("Fecha", fecha);
            }
            else
            {
                fechaParameter = new ObjectParameter("Fecha", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Log_RevisionEjecucion>("Log_RevisionEjecucion", fechaParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ReporteDetalleEquipos> Reporte_EquiposDetalle()
        {
            return base.ExecuteFunction<ReporteDetalleEquipos>("Reporte_EquiposDetalle");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<ReporteDetalleEquipos> Reporte_EquiposDetalle(MergeOption mergeOption)
        {
            return base.ExecuteFunction<ReporteDetalleEquipos>("Reporte_EquiposDetalle", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idUsuario">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> LineaBaseEliminar(Nullable<global::System.Int32> idUsuario)
        {
            ObjectParameter idUsuarioParameter;
            if (idUsuario.HasValue)
            {
                idUsuarioParameter = new ObjectParameter("IdUsuario", idUsuario);
            }
            else
            {
                idUsuarioParameter = new ObjectParameter("IdUsuario", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("LineaBaseEliminar", idUsuarioParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="idUsuario">No Metadata Documentation available.</param>
        /// <param name="usuario">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> LineaBaseModificar(Nullable<global::System.Int32> idUsuario, global::System.String usuario)
        {
            ObjectParameter idUsuarioParameter;
            if (idUsuario.HasValue)
            {
                idUsuarioParameter = new ObjectParameter("IdUsuario", idUsuario);
            }
            else
            {
                idUsuarioParameter = new ObjectParameter("IdUsuario", typeof(global::System.Int32));
            }
    
            ObjectParameter usuarioParameter;
            if (usuario != null)
            {
                usuarioParameter = new ObjectParameter("Usuario", usuario);
            }
            else
            {
                usuarioParameter = new ObjectParameter("Usuario", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("LineaBaseModificar", idUsuarioParameter, usuarioParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<LineaBase> LineaBaseSelectAll()
        {
            return base.ExecuteFunction<LineaBase>("LineaBaseSelectAll");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<LineaBase> LineaBaseSelectAll(MergeOption mergeOption)
        {
            return base.ExecuteFunction<LineaBase>("LineaBaseSelectAll", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="usuario">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> LineaBaseInsertar(global::System.String usuario)
        {
            ObjectParameter usuarioParameter;
            if (usuario != null)
            {
                usuarioParameter = new ObjectParameter("Usuario", usuario);
            }
            else
            {
                usuarioParameter = new ObjectParameter("Usuario", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("LineaBaseInsertar", usuarioParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="Administradores")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Administradores : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Administradores object.
        /// </summary>
        /// <param name="idMaquina">Initial value of the IdMaquina property.</param>
        /// <param name="administrador">Initial value of the Administrador property.</param>
        /// <param name="fecha">Initial value of the Fecha property.</param>
        public static Administradores CreateAdministradores(global::System.Int32 idMaquina, global::System.String administrador, global::System.DateTime fecha)
        {
            Administradores administradores = new Administradores();
            administradores.IdMaquina = idMaquina;
            administradores.Administrador = administrador;
            administradores.Fecha = fecha;
            return administradores;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMaquina
        {
            get
            {
                return _IdMaquina;
            }
            set
            {
                if (_IdMaquina != value)
                {
                    OnIdMaquinaChanging(value);
                    ReportPropertyChanging("IdMaquina");
                    _IdMaquina = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdMaquina");
                    OnIdMaquinaChanged();
                }
            }
        }
        private global::System.Int32 _IdMaquina;
        partial void OnIdMaquinaChanging(global::System.Int32 value);
        partial void OnIdMaquinaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Administrador
        {
            get
            {
                return _Administrador;
            }
            set
            {
                if (_Administrador != value)
                {
                    OnAdministradorChanging(value);
                    ReportPropertyChanging("Administrador");
                    _Administrador = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Administrador");
                    OnAdministradorChanged();
                }
            }
        }
        private global::System.String _Administrador;
        partial void OnAdministradorChanging(global::System.String value);
        partial void OnAdministradorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Fecha
        {
            get
            {
                return _Fecha;
            }
            set
            {
                if (_Fecha != value)
                {
                    OnFechaChanging(value);
                    ReportPropertyChanging("Fecha");
                    _Fecha = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Fecha");
                    OnFechaChanged();
                }
            }
        }
        private global::System.DateTime _Fecha;
        partial void OnFechaChanging(global::System.DateTime value);
        partial void OnFechaChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="AdministradoresEscaneados")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdministradoresEscaneados : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdministradoresEscaneados object.
        /// </summary>
        /// <param name="idMaquina">Initial value of the IdMaquina property.</param>
        /// <param name="administrador">Initial value of the Administrador property.</param>
        public static AdministradoresEscaneados CreateAdministradoresEscaneados(global::System.Int32 idMaquina, global::System.String administrador)
        {
            AdministradoresEscaneados administradoresEscaneados = new AdministradoresEscaneados();
            administradoresEscaneados.IdMaquina = idMaquina;
            administradoresEscaneados.Administrador = administrador;
            return administradoresEscaneados;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMaquina
        {
            get
            {
                return _IdMaquina;
            }
            set
            {
                if (_IdMaquina != value)
                {
                    OnIdMaquinaChanging(value);
                    ReportPropertyChanging("IdMaquina");
                    _IdMaquina = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdMaquina");
                    OnIdMaquinaChanged();
                }
            }
        }
        private global::System.Int32 _IdMaquina;
        partial void OnIdMaquinaChanging(global::System.Int32 value);
        partial void OnIdMaquinaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Administrador
        {
            get
            {
                return _Administrador;
            }
            set
            {
                if (_Administrador != value)
                {
                    OnAdministradorChanging(value);
                    ReportPropertyChanging("Administrador");
                    _Administrador = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Administrador");
                    OnAdministradorChanged();
                }
            }
        }
        private global::System.String _Administrador;
        partial void OnAdministradorChanging(global::System.String value);
        partial void OnAdministradorChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="AdministradoresNovedades")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdministradoresNovedades : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdministradoresNovedades object.
        /// </summary>
        /// <param name="idMaquina">Initial value of the IdMaquina property.</param>
        /// <param name="administrador">Initial value of the Administrador property.</param>
        /// <param name="fecha">Initial value of the Fecha property.</param>
        /// <param name="accion">Initial value of the Accion property.</param>
        public static AdministradoresNovedades CreateAdministradoresNovedades(global::System.Int32 idMaquina, global::System.String administrador, global::System.DateTime fecha, global::System.String accion)
        {
            AdministradoresNovedades administradoresNovedades = new AdministradoresNovedades();
            administradoresNovedades.IdMaquina = idMaquina;
            administradoresNovedades.Administrador = administrador;
            administradoresNovedades.Fecha = fecha;
            administradoresNovedades.Accion = accion;
            return administradoresNovedades;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMaquina
        {
            get
            {
                return _IdMaquina;
            }
            set
            {
                if (_IdMaquina != value)
                {
                    OnIdMaquinaChanging(value);
                    ReportPropertyChanging("IdMaquina");
                    _IdMaquina = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdMaquina");
                    OnIdMaquinaChanged();
                }
            }
        }
        private global::System.Int32 _IdMaquina;
        partial void OnIdMaquinaChanging(global::System.Int32 value);
        partial void OnIdMaquinaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Administrador
        {
            get
            {
                return _Administrador;
            }
            set
            {
                if (_Administrador != value)
                {
                    OnAdministradorChanging(value);
                    ReportPropertyChanging("Administrador");
                    _Administrador = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Administrador");
                    OnAdministradorChanged();
                }
            }
        }
        private global::System.String _Administrador;
        partial void OnAdministradorChanging(global::System.String value);
        partial void OnAdministradorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Fecha
        {
            get
            {
                return _Fecha;
            }
            set
            {
                if (_Fecha != value)
                {
                    OnFechaChanging(value);
                    ReportPropertyChanging("Fecha");
                    _Fecha = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Fecha");
                    OnFechaChanged();
                }
            }
        }
        private global::System.DateTime _Fecha;
        partial void OnFechaChanging(global::System.DateTime value);
        partial void OnFechaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Accion
        {
            get
            {
                return _Accion;
            }
            set
            {
                if (_Accion != value)
                {
                    OnAccionChanging(value);
                    ReportPropertyChanging("Accion");
                    _Accion = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Accion");
                    OnAccionChanged();
                }
            }
        }
        private global::System.String _Accion;
        partial void OnAccionChanging(global::System.String value);
        partial void OnAccionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="Agencias")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Agencias : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Agencias object.
        /// </summary>
        /// <param name="idAgencia">Initial value of the IdAgencia property.</param>
        /// <param name="nombreAgencia">Initial value of the NombreAgencia property.</param>
        /// <param name="ciudad">Initial value of the Ciudad property.</param>
        /// <param name="provincia">Initial value of the Provincia property.</param>
        /// <param name="subred">Initial value of the Subred property.</param>
        /// <param name="estado">Initial value of the Estado property.</param>
        /// <param name="grupo">Initial value of the Grupo property.</param>
        public static Agencias CreateAgencias(global::System.Int32 idAgencia, global::System.String nombreAgencia, global::System.String ciudad, global::System.String provincia, global::System.String subred, global::System.Boolean estado, global::System.Int32 grupo)
        {
            Agencias agencias = new Agencias();
            agencias.IdAgencia = idAgencia;
            agencias.NombreAgencia = nombreAgencia;
            agencias.Ciudad = ciudad;
            agencias.Provincia = provincia;
            agencias.Subred = subred;
            agencias.Estado = estado;
            agencias.Grupo = grupo;
            return agencias;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdAgencia
        {
            get
            {
                return _IdAgencia;
            }
            set
            {
                if (_IdAgencia != value)
                {
                    OnIdAgenciaChanging(value);
                    ReportPropertyChanging("IdAgencia");
                    _IdAgencia = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdAgencia");
                    OnIdAgenciaChanged();
                }
            }
        }
        private global::System.Int32 _IdAgencia;
        partial void OnIdAgenciaChanging(global::System.Int32 value);
        partial void OnIdAgenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombreAgencia
        {
            get
            {
                return _NombreAgencia;
            }
            set
            {
                OnNombreAgenciaChanging(value);
                ReportPropertyChanging("NombreAgencia");
                _NombreAgencia = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombreAgencia");
                OnNombreAgenciaChanged();
            }
        }
        private global::System.String _NombreAgencia;
        partial void OnNombreAgenciaChanging(global::System.String value);
        partial void OnNombreAgenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ciudad
        {
            get
            {
                return _Ciudad;
            }
            set
            {
                OnCiudadChanging(value);
                ReportPropertyChanging("Ciudad");
                _Ciudad = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ciudad");
                OnCiudadChanged();
            }
        }
        private global::System.String _Ciudad;
        partial void OnCiudadChanging(global::System.String value);
        partial void OnCiudadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provincia
        {
            get
            {
                return _Provincia;
            }
            set
            {
                OnProvinciaChanging(value);
                ReportPropertyChanging("Provincia");
                _Provincia = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Provincia");
                OnProvinciaChanged();
            }
        }
        private global::System.String _Provincia;
        partial void OnProvinciaChanging(global::System.String value);
        partial void OnProvinciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subred
        {
            get
            {
                return _Subred;
            }
            set
            {
                OnSubredChanging(value);
                ReportPropertyChanging("Subred");
                _Subred = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subred");
                OnSubredChanged();
            }
        }
        private global::System.String _Subred;
        partial void OnSubredChanging(global::System.String value);
        partial void OnSubredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Estado
        {
            get
            {
                return _Estado;
            }
            set
            {
                OnEstadoChanging(value);
                ReportPropertyChanging("Estado");
                _Estado = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Estado");
                OnEstadoChanged();
            }
        }
        private global::System.Boolean _Estado;
        partial void OnEstadoChanging(global::System.Boolean value);
        partial void OnEstadoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Grupo
        {
            get
            {
                return _Grupo;
            }
            set
            {
                OnGrupoChanging(value);
                ReportPropertyChanging("Grupo");
                _Grupo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Grupo");
                OnGrupoChanged();
            }
        }
        private global::System.Int32 _Grupo;
        partial void OnGrupoChanging(global::System.Int32 value);
        partial void OnGrupoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ControlAdministradoresModel", "FK_Equipos_Agencias", "Equipos")]
        public EntityCollection<Equipos> Equipos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equipos>("ControlAdministradoresModel.FK_Equipos_Agencias", "Equipos");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equipos>("ControlAdministradoresModel.FK_Equipos_Agencias", "Equipos", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="CiudadesEcuador")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CiudadesEcuador : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CiudadesEcuador object.
        /// </summary>
        /// <param name="idCiudad">Initial value of the IdCiudad property.</param>
        /// <param name="idProvincia">Initial value of the IdProvincia property.</param>
        /// <param name="ciudad">Initial value of the Ciudad property.</param>
        public static CiudadesEcuador CreateCiudadesEcuador(global::System.Int32 idCiudad, global::System.Int32 idProvincia, global::System.String ciudad)
        {
            CiudadesEcuador ciudadesEcuador = new CiudadesEcuador();
            ciudadesEcuador.IdCiudad = idCiudad;
            ciudadesEcuador.IdProvincia = idProvincia;
            ciudadesEcuador.Ciudad = ciudad;
            return ciudadesEcuador;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdCiudad
        {
            get
            {
                return _IdCiudad;
            }
            set
            {
                if (_IdCiudad != value)
                {
                    OnIdCiudadChanging(value);
                    ReportPropertyChanging("IdCiudad");
                    _IdCiudad = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdCiudad");
                    OnIdCiudadChanged();
                }
            }
        }
        private global::System.Int32 _IdCiudad;
        partial void OnIdCiudadChanging(global::System.Int32 value);
        partial void OnIdCiudadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdProvincia
        {
            get
            {
                return _IdProvincia;
            }
            set
            {
                OnIdProvinciaChanging(value);
                ReportPropertyChanging("IdProvincia");
                _IdProvincia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdProvincia");
                OnIdProvinciaChanged();
            }
        }
        private global::System.Int32 _IdProvincia;
        partial void OnIdProvinciaChanging(global::System.Int32 value);
        partial void OnIdProvinciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ciudad
        {
            get
            {
                return _Ciudad;
            }
            set
            {
                OnCiudadChanging(value);
                ReportPropertyChanging("Ciudad");
                _Ciudad = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ciudad");
                OnCiudadChanged();
            }
        }
        private global::System.String _Ciudad;
        partial void OnCiudadChanging(global::System.String value);
        partial void OnCiudadChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="Equipos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equipos : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Equipos object.
        /// </summary>
        /// <param name="idMaquina">Initial value of the IdMaquina property.</param>
        /// <param name="idAgencia">Initial value of the IdAgencia property.</param>
        /// <param name="ip">Initial value of the Ip property.</param>
        /// <param name="equipo">Initial value of the Equipo property.</param>
        /// <param name="ultimoUsuarioLogeado">Initial value of the UltimoUsuarioLogeado property.</param>
        /// <param name="fechaRegistro">Initial value of the FechaRegistro property.</param>
        /// <param name="administradoresEscaneados">Initial value of the AdministradoresEscaneados property.</param>
        public static Equipos CreateEquipos(global::System.Int32 idMaquina, global::System.Int32 idAgencia, global::System.String ip, global::System.String equipo, global::System.String ultimoUsuarioLogeado, global::System.DateTime fechaRegistro, global::System.String administradoresEscaneados)
        {
            Equipos equipos = new Equipos();
            equipos.IdMaquina = idMaquina;
            equipos.IdAgencia = idAgencia;
            equipos.Ip = ip;
            equipos.Equipo = equipo;
            equipos.UltimoUsuarioLogeado = ultimoUsuarioLogeado;
            equipos.FechaRegistro = fechaRegistro;
            equipos.AdministradoresEscaneados = administradoresEscaneados;
            return equipos;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMaquina
        {
            get
            {
                return _IdMaquina;
            }
            set
            {
                if (_IdMaquina != value)
                {
                    OnIdMaquinaChanging(value);
                    ReportPropertyChanging("IdMaquina");
                    _IdMaquina = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdMaquina");
                    OnIdMaquinaChanged();
                }
            }
        }
        private global::System.Int32 _IdMaquina;
        partial void OnIdMaquinaChanging(global::System.Int32 value);
        partial void OnIdMaquinaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdAgencia
        {
            get
            {
                return _IdAgencia;
            }
            set
            {
                OnIdAgenciaChanging(value);
                ReportPropertyChanging("IdAgencia");
                _IdAgencia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdAgencia");
                OnIdAgenciaChanged();
            }
        }
        private global::System.Int32 _IdAgencia;
        partial void OnIdAgenciaChanging(global::System.Int32 value);
        partial void OnIdAgenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ip
        {
            get
            {
                return _Ip;
            }
            set
            {
                OnIpChanging(value);
                ReportPropertyChanging("Ip");
                _Ip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ip");
                OnIpChanged();
            }
        }
        private global::System.String _Ip;
        partial void OnIpChanging(global::System.String value);
        partial void OnIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Equipo
        {
            get
            {
                return _Equipo;
            }
            set
            {
                OnEquipoChanging(value);
                ReportPropertyChanging("Equipo");
                _Equipo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Equipo");
                OnEquipoChanged();
            }
        }
        private global::System.String _Equipo;
        partial void OnEquipoChanging(global::System.String value);
        partial void OnEquipoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SistemaOperativo
        {
            get
            {
                return _SistemaOperativo;
            }
            set
            {
                OnSistemaOperativoChanging(value);
                ReportPropertyChanging("SistemaOperativo");
                _SistemaOperativo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SistemaOperativo");
                OnSistemaOperativoChanged();
            }
        }
        private global::System.String _SistemaOperativo;
        partial void OnSistemaOperativoChanging(global::System.String value);
        partial void OnSistemaOperativoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UltimoUsuarioLogeado
        {
            get
            {
                return _UltimoUsuarioLogeado;
            }
            set
            {
                OnUltimoUsuarioLogeadoChanging(value);
                ReportPropertyChanging("UltimoUsuarioLogeado");
                _UltimoUsuarioLogeado = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UltimoUsuarioLogeado");
                OnUltimoUsuarioLogeadoChanged();
            }
        }
        private global::System.String _UltimoUsuarioLogeado;
        partial void OnUltimoUsuarioLogeadoChanging(global::System.String value);
        partial void OnUltimoUsuarioLogeadoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FechaRegistro
        {
            get
            {
                return _FechaRegistro;
            }
            set
            {
                OnFechaRegistroChanging(value);
                ReportPropertyChanging("FechaRegistro");
                _FechaRegistro = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FechaRegistro");
                OnFechaRegistroChanged();
            }
        }
        private global::System.DateTime _FechaRegistro;
        partial void OnFechaRegistroChanging(global::System.DateTime value);
        partial void OnFechaRegistroChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AdministradoresEscaneados
        {
            get
            {
                return _AdministradoresEscaneados;
            }
            set
            {
                OnAdministradoresEscaneadosChanging(value);
                ReportPropertyChanging("AdministradoresEscaneados");
                _AdministradoresEscaneados = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AdministradoresEscaneados");
                OnAdministradoresEscaneadosChanged();
            }
        }
        private global::System.String _AdministradoresEscaneados;
        partial void OnAdministradoresEscaneadosChanging(global::System.String value);
        partial void OnAdministradoresEscaneadosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Antivirus
        {
            get
            {
                return _Antivirus;
            }
            set
            {
                OnAntivirusChanging(value);
                ReportPropertyChanging("Antivirus");
                _Antivirus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Antivirus");
                OnAntivirusChanged();
            }
        }
        private Nullable<global::System.Int32> _Antivirus;
        partial void OnAntivirusChanging(Nullable<global::System.Int32> value);
        partial void OnAntivirusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FechaActualizacion
        {
            get
            {
                return _FechaActualizacion;
            }
            set
            {
                OnFechaActualizacionChanging(value);
                ReportPropertyChanging("FechaActualizacion");
                _FechaActualizacion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FechaActualizacion");
                OnFechaActualizacionChanged();
            }
        }
        private Nullable<global::System.DateTime> _FechaActualizacion;
        partial void OnFechaActualizacionChanging(Nullable<global::System.DateTime> value);
        partial void OnFechaActualizacionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ControlAdministradoresModel", "FK_Equipos_Agencias", "Agencias")]
        public Agencias Agencias
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agencias>("ControlAdministradoresModel.FK_Equipos_Agencias", "Agencias").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agencias>("ControlAdministradoresModel.FK_Equipos_Agencias", "Agencias").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Agencias> AgenciasReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Agencias>("ControlAdministradoresModel.FK_Equipos_Agencias", "Agencias");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Agencias>("ControlAdministradoresModel.FK_Equipos_Agencias", "Agencias", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="EquiposEscaneados")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquiposEscaneados : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquiposEscaneados object.
        /// </summary>
        /// <param name="idMaquina">Initial value of the IdMaquina property.</param>
        /// <param name="idAgencia">Initial value of the IdAgencia property.</param>
        /// <param name="ip">Initial value of the Ip property.</param>
        /// <param name="equipo">Initial value of the Equipo property.</param>
        /// <param name="ultimoUsuarioLogeado">Initial value of the UltimoUsuarioLogeado property.</param>
        /// <param name="fechaRegistro">Initial value of the FechaRegistro property.</param>
        /// <param name="administradoresEscaneados">Initial value of the AdministradoresEscaneados property.</param>
        /// <param name="antivirus">Initial value of the Antivirus property.</param>
        public static EquiposEscaneados CreateEquiposEscaneados(global::System.Int32 idMaquina, global::System.Int32 idAgencia, global::System.String ip, global::System.String equipo, global::System.String ultimoUsuarioLogeado, global::System.DateTime fechaRegistro, global::System.String administradoresEscaneados, global::System.Int32 antivirus)
        {
            EquiposEscaneados equiposEscaneados = new EquiposEscaneados();
            equiposEscaneados.IdMaquina = idMaquina;
            equiposEscaneados.IdAgencia = idAgencia;
            equiposEscaneados.Ip = ip;
            equiposEscaneados.Equipo = equipo;
            equiposEscaneados.UltimoUsuarioLogeado = ultimoUsuarioLogeado;
            equiposEscaneados.FechaRegistro = fechaRegistro;
            equiposEscaneados.AdministradoresEscaneados = administradoresEscaneados;
            equiposEscaneados.Antivirus = antivirus;
            return equiposEscaneados;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMaquina
        {
            get
            {
                return _IdMaquina;
            }
            set
            {
                if (_IdMaquina != value)
                {
                    OnIdMaquinaChanging(value);
                    ReportPropertyChanging("IdMaquina");
                    _IdMaquina = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdMaquina");
                    OnIdMaquinaChanged();
                }
            }
        }
        private global::System.Int32 _IdMaquina;
        partial void OnIdMaquinaChanging(global::System.Int32 value);
        partial void OnIdMaquinaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdAgencia
        {
            get
            {
                return _IdAgencia;
            }
            set
            {
                OnIdAgenciaChanging(value);
                ReportPropertyChanging("IdAgencia");
                _IdAgencia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdAgencia");
                OnIdAgenciaChanged();
            }
        }
        private global::System.Int32 _IdAgencia;
        partial void OnIdAgenciaChanging(global::System.Int32 value);
        partial void OnIdAgenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ip
        {
            get
            {
                return _Ip;
            }
            set
            {
                OnIpChanging(value);
                ReportPropertyChanging("Ip");
                _Ip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ip");
                OnIpChanged();
            }
        }
        private global::System.String _Ip;
        partial void OnIpChanging(global::System.String value);
        partial void OnIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Equipo
        {
            get
            {
                return _Equipo;
            }
            set
            {
                OnEquipoChanging(value);
                ReportPropertyChanging("Equipo");
                _Equipo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Equipo");
                OnEquipoChanged();
            }
        }
        private global::System.String _Equipo;
        partial void OnEquipoChanging(global::System.String value);
        partial void OnEquipoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SistemaOperativo
        {
            get
            {
                return _SistemaOperativo;
            }
            set
            {
                OnSistemaOperativoChanging(value);
                ReportPropertyChanging("SistemaOperativo");
                _SistemaOperativo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SistemaOperativo");
                OnSistemaOperativoChanged();
            }
        }
        private global::System.String _SistemaOperativo;
        partial void OnSistemaOperativoChanging(global::System.String value);
        partial void OnSistemaOperativoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UltimoUsuarioLogeado
        {
            get
            {
                return _UltimoUsuarioLogeado;
            }
            set
            {
                OnUltimoUsuarioLogeadoChanging(value);
                ReportPropertyChanging("UltimoUsuarioLogeado");
                _UltimoUsuarioLogeado = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UltimoUsuarioLogeado");
                OnUltimoUsuarioLogeadoChanged();
            }
        }
        private global::System.String _UltimoUsuarioLogeado;
        partial void OnUltimoUsuarioLogeadoChanging(global::System.String value);
        partial void OnUltimoUsuarioLogeadoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FechaRegistro
        {
            get
            {
                return _FechaRegistro;
            }
            set
            {
                OnFechaRegistroChanging(value);
                ReportPropertyChanging("FechaRegistro");
                _FechaRegistro = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FechaRegistro");
                OnFechaRegistroChanged();
            }
        }
        private global::System.DateTime _FechaRegistro;
        partial void OnFechaRegistroChanging(global::System.DateTime value);
        partial void OnFechaRegistroChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AdministradoresEscaneados
        {
            get
            {
                return _AdministradoresEscaneados;
            }
            set
            {
                OnAdministradoresEscaneadosChanging(value);
                ReportPropertyChanging("AdministradoresEscaneados");
                _AdministradoresEscaneados = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AdministradoresEscaneados");
                OnAdministradoresEscaneadosChanged();
            }
        }
        private global::System.String _AdministradoresEscaneados;
        partial void OnAdministradoresEscaneadosChanging(global::System.String value);
        partial void OnAdministradoresEscaneadosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Antivirus
        {
            get
            {
                return _Antivirus;
            }
            set
            {
                OnAntivirusChanging(value);
                ReportPropertyChanging("Antivirus");
                _Antivirus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Antivirus");
                OnAntivirusChanged();
            }
        }
        private global::System.Int32 _Antivirus;
        partial void OnAntivirusChanging(global::System.Int32 value);
        partial void OnAntivirusChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="EquiposNovedades")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquiposNovedades : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquiposNovedades object.
        /// </summary>
        /// <param name="idMaquina">Initial value of the IdMaquina property.</param>
        /// <param name="idAgencia">Initial value of the IdAgencia property.</param>
        /// <param name="ip">Initial value of the Ip property.</param>
        /// <param name="equipo">Initial value of the Equipo property.</param>
        /// <param name="ultimoUsuarioLogeado">Initial value of the UltimoUsuarioLogeado property.</param>
        /// <param name="fechaRegistro">Initial value of the FechaRegistro property.</param>
        public static EquiposNovedades CreateEquiposNovedades(global::System.Int32 idMaquina, global::System.Int32 idAgencia, global::System.String ip, global::System.String equipo, global::System.String ultimoUsuarioLogeado, global::System.DateTime fechaRegistro)
        {
            EquiposNovedades equiposNovedades = new EquiposNovedades();
            equiposNovedades.IdMaquina = idMaquina;
            equiposNovedades.IdAgencia = idAgencia;
            equiposNovedades.Ip = ip;
            equiposNovedades.Equipo = equipo;
            equiposNovedades.UltimoUsuarioLogeado = ultimoUsuarioLogeado;
            equiposNovedades.FechaRegistro = fechaRegistro;
            return equiposNovedades;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdMaquina
        {
            get
            {
                return _IdMaquina;
            }
            set
            {
                if (_IdMaquina != value)
                {
                    OnIdMaquinaChanging(value);
                    ReportPropertyChanging("IdMaquina");
                    _IdMaquina = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdMaquina");
                    OnIdMaquinaChanged();
                }
            }
        }
        private global::System.Int32 _IdMaquina;
        partial void OnIdMaquinaChanging(global::System.Int32 value);
        partial void OnIdMaquinaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdAgencia
        {
            get
            {
                return _IdAgencia;
            }
            set
            {
                OnIdAgenciaChanging(value);
                ReportPropertyChanging("IdAgencia");
                _IdAgencia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdAgencia");
                OnIdAgenciaChanged();
            }
        }
        private global::System.Int32 _IdAgencia;
        partial void OnIdAgenciaChanging(global::System.Int32 value);
        partial void OnIdAgenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ip
        {
            get
            {
                return _Ip;
            }
            set
            {
                OnIpChanging(value);
                ReportPropertyChanging("Ip");
                _Ip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ip");
                OnIpChanged();
            }
        }
        private global::System.String _Ip;
        partial void OnIpChanging(global::System.String value);
        partial void OnIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Equipo
        {
            get
            {
                return _Equipo;
            }
            set
            {
                OnEquipoChanging(value);
                ReportPropertyChanging("Equipo");
                _Equipo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Equipo");
                OnEquipoChanged();
            }
        }
        private global::System.String _Equipo;
        partial void OnEquipoChanging(global::System.String value);
        partial void OnEquipoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SistemaOperativo
        {
            get
            {
                return _SistemaOperativo;
            }
            set
            {
                OnSistemaOperativoChanging(value);
                ReportPropertyChanging("SistemaOperativo");
                _SistemaOperativo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SistemaOperativo");
                OnSistemaOperativoChanged();
            }
        }
        private global::System.String _SistemaOperativo;
        partial void OnSistemaOperativoChanging(global::System.String value);
        partial void OnSistemaOperativoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UltimoUsuarioLogeado
        {
            get
            {
                return _UltimoUsuarioLogeado;
            }
            set
            {
                OnUltimoUsuarioLogeadoChanging(value);
                ReportPropertyChanging("UltimoUsuarioLogeado");
                _UltimoUsuarioLogeado = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UltimoUsuarioLogeado");
                OnUltimoUsuarioLogeadoChanged();
            }
        }
        private global::System.String _UltimoUsuarioLogeado;
        partial void OnUltimoUsuarioLogeadoChanging(global::System.String value);
        partial void OnUltimoUsuarioLogeadoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FechaRegistro
        {
            get
            {
                return _FechaRegistro;
            }
            set
            {
                OnFechaRegistroChanging(value);
                ReportPropertyChanging("FechaRegistro");
                _FechaRegistro = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FechaRegistro");
                OnFechaRegistroChanged();
            }
        }
        private global::System.DateTime _FechaRegistro;
        partial void OnFechaRegistroChanging(global::System.DateTime value);
        partial void OnFechaRegistroChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Antivirus
        {
            get
            {
                return _Antivirus;
            }
            set
            {
                OnAntivirusChanging(value);
                ReportPropertyChanging("Antivirus");
                _Antivirus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Antivirus");
                OnAntivirusChanged();
            }
        }
        private Nullable<global::System.Int32> _Antivirus;
        partial void OnAntivirusChanging(Nullable<global::System.Int32> value);
        partial void OnAntivirusChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="EquiposNovedadesAntivirus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquiposNovedadesAntivirus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquiposNovedadesAntivirus object.
        /// </summary>
        /// <param name="idAgencia">Initial value of the IdAgencia property.</param>
        /// <param name="ip">Initial value of the Ip property.</param>
        /// <param name="equipo">Initial value of the Equipo property.</param>
        /// <param name="fechaRegistro">Initial value of the FechaRegistro property.</param>
        public static EquiposNovedadesAntivirus CreateEquiposNovedadesAntivirus(global::System.Int32 idAgencia, global::System.String ip, global::System.String equipo, global::System.DateTime fechaRegistro)
        {
            EquiposNovedadesAntivirus equiposNovedadesAntivirus = new EquiposNovedadesAntivirus();
            equiposNovedadesAntivirus.IdAgencia = idAgencia;
            equiposNovedadesAntivirus.Ip = ip;
            equiposNovedadesAntivirus.Equipo = equipo;
            equiposNovedadesAntivirus.FechaRegistro = fechaRegistro;
            return equiposNovedadesAntivirus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdAgencia
        {
            get
            {
                return _IdAgencia;
            }
            set
            {
                if (_IdAgencia != value)
                {
                    OnIdAgenciaChanging(value);
                    ReportPropertyChanging("IdAgencia");
                    _IdAgencia = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdAgencia");
                    OnIdAgenciaChanged();
                }
            }
        }
        private global::System.Int32 _IdAgencia;
        partial void OnIdAgenciaChanging(global::System.Int32 value);
        partial void OnIdAgenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ip
        {
            get
            {
                return _Ip;
            }
            set
            {
                if (_Ip != value)
                {
                    OnIpChanging(value);
                    ReportPropertyChanging("Ip");
                    _Ip = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Ip");
                    OnIpChanged();
                }
            }
        }
        private global::System.String _Ip;
        partial void OnIpChanging(global::System.String value);
        partial void OnIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Equipo
        {
            get
            {
                return _Equipo;
            }
            set
            {
                if (_Equipo != value)
                {
                    OnEquipoChanging(value);
                    ReportPropertyChanging("Equipo");
                    _Equipo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Equipo");
                    OnEquipoChanged();
                }
            }
        }
        private global::System.String _Equipo;
        partial void OnEquipoChanging(global::System.String value);
        partial void OnEquipoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SistemaOperativo
        {
            get
            {
                return _SistemaOperativo;
            }
            set
            {
                OnSistemaOperativoChanging(value);
                ReportPropertyChanging("SistemaOperativo");
                _SistemaOperativo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SistemaOperativo");
                OnSistemaOperativoChanged();
            }
        }
        private global::System.String _SistemaOperativo;
        partial void OnSistemaOperativoChanging(global::System.String value);
        partial void OnSistemaOperativoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FechaRegistro
        {
            get
            {
                return _FechaRegistro;
            }
            set
            {
                if (_FechaRegistro != value)
                {
                    OnFechaRegistroChanging(value);
                    ReportPropertyChanging("FechaRegistro");
                    _FechaRegistro = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FechaRegistro");
                    OnFechaRegistroChanged();
                }
            }
        }
        private global::System.DateTime _FechaRegistro;
        partial void OnFechaRegistroChanging(global::System.DateTime value);
        partial void OnFechaRegistroChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Antivirus
        {
            get
            {
                return _Antivirus;
            }
            set
            {
                OnAntivirusChanging(value);
                ReportPropertyChanging("Antivirus");
                _Antivirus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Antivirus");
                OnAntivirusChanged();
            }
        }
        private Nullable<global::System.Int32> _Antivirus;
        partial void OnAntivirusChanging(Nullable<global::System.Int32> value);
        partial void OnAntivirusChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="LineaBase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LineaBase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LineaBase object.
        /// </summary>
        /// <param name="idUsuario">Initial value of the IdUsuario property.</param>
        /// <param name="usuario">Initial value of the Usuario property.</param>
        public static LineaBase CreateLineaBase(global::System.Int32 idUsuario, global::System.String usuario)
        {
            LineaBase lineaBase = new LineaBase();
            lineaBase.IdUsuario = idUsuario;
            lineaBase.Usuario = usuario;
            return lineaBase;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdUsuario
        {
            get
            {
                return _IdUsuario;
            }
            set
            {
                if (_IdUsuario != value)
                {
                    OnIdUsuarioChanging(value);
                    ReportPropertyChanging("IdUsuario");
                    _IdUsuario = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdUsuario");
                    OnIdUsuarioChanged();
                }
            }
        }
        private global::System.Int32 _IdUsuario;
        partial void OnIdUsuarioChanging(global::System.Int32 value);
        partial void OnIdUsuarioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Usuario
        {
            get
            {
                return _Usuario;
            }
            set
            {
                OnUsuarioChanging(value);
                ReportPropertyChanging("Usuario");
                _Usuario = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Usuario");
                OnUsuarioChanged();
            }
        }
        private global::System.String _Usuario;
        partial void OnUsuarioChanging(global::System.String value);
        partial void OnUsuarioChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="LogEscaneo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LogEscaneo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LogEscaneo object.
        /// </summary>
        /// <param name="idLog">Initial value of the IdLog property.</param>
        /// <param name="segmentoEscaneado">Initial value of the SegmentoEscaneado property.</param>
        /// <param name="fecha">Initial value of the Fecha property.</param>
        /// <param name="accion">Initial value of the Accion property.</param>
        public static LogEscaneo CreateLogEscaneo(global::System.Int32 idLog, global::System.String segmentoEscaneado, global::System.DateTime fecha, global::System.String accion)
        {
            LogEscaneo logEscaneo = new LogEscaneo();
            logEscaneo.IdLog = idLog;
            logEscaneo.SegmentoEscaneado = segmentoEscaneado;
            logEscaneo.Fecha = fecha;
            logEscaneo.Accion = accion;
            return logEscaneo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdLog
        {
            get
            {
                return _IdLog;
            }
            set
            {
                if (_IdLog != value)
                {
                    OnIdLogChanging(value);
                    ReportPropertyChanging("IdLog");
                    _IdLog = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdLog");
                    OnIdLogChanged();
                }
            }
        }
        private global::System.Int32 _IdLog;
        partial void OnIdLogChanging(global::System.Int32 value);
        partial void OnIdLogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SegmentoEscaneado
        {
            get
            {
                return _SegmentoEscaneado;
            }
            set
            {
                OnSegmentoEscaneadoChanging(value);
                ReportPropertyChanging("SegmentoEscaneado");
                _SegmentoEscaneado = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SegmentoEscaneado");
                OnSegmentoEscaneadoChanged();
            }
        }
        private global::System.String _SegmentoEscaneado;
        partial void OnSegmentoEscaneadoChanging(global::System.String value);
        partial void OnSegmentoEscaneadoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Fecha
        {
            get
            {
                return _Fecha;
            }
            set
            {
                OnFechaChanging(value);
                ReportPropertyChanging("Fecha");
                _Fecha = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fecha");
                OnFechaChanged();
            }
        }
        private global::System.DateTime _Fecha;
        partial void OnFechaChanging(global::System.DateTime value);
        partial void OnFechaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Accion
        {
            get
            {
                return _Accion;
            }
            set
            {
                OnAccionChanging(value);
                ReportPropertyChanging("Accion");
                _Accion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Accion");
                OnAccionChanged();
            }
        }
        private global::System.String _Accion;
        partial void OnAccionChanging(global::System.String value);
        partial void OnAccionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TTL
        {
            get
            {
                return _TTL;
            }
            set
            {
                OnTTLChanging(value);
                ReportPropertyChanging("TTL");
                _TTL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TTL");
                OnTTLChanged();
            }
        }
        private Nullable<global::System.Int32> _TTL;
        partial void OnTTLChanging(Nullable<global::System.Int32> value);
        partial void OnTTLChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="Parametros")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parametros : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parametros object.
        /// </summary>
        /// <param name="codigo">Initial value of the Codigo property.</param>
        /// <param name="nombre">Initial value of the Nombre property.</param>
        /// <param name="valor">Initial value of the Valor property.</param>
        public static Parametros CreateParametros(global::System.String codigo, global::System.String nombre, global::System.Int32 valor)
        {
            Parametros parametros = new Parametros();
            parametros.Codigo = codigo;
            parametros.Nombre = nombre;
            parametros.Valor = valor;
            return parametros;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Codigo
        {
            get
            {
                return _Codigo;
            }
            set
            {
                if (_Codigo != value)
                {
                    OnCodigoChanging(value);
                    ReportPropertyChanging("Codigo");
                    _Codigo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Codigo");
                    OnCodigoChanged();
                }
            }
        }
        private global::System.String _Codigo;
        partial void OnCodigoChanging(global::System.String value);
        partial void OnCodigoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Valor
        {
            get
            {
                return _Valor;
            }
            set
            {
                OnValorChanging(value);
                ReportPropertyChanging("Valor");
                _Valor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Valor");
                OnValorChanged();
            }
        }
        private global::System.Int32 _Valor;
        partial void OnValorChanging(global::System.Int32 value);
        partial void OnValorChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="ProvinciasEcuador")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProvinciasEcuador : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProvinciasEcuador object.
        /// </summary>
        /// <param name="idProvincia">Initial value of the IdProvincia property.</param>
        /// <param name="provincia">Initial value of the Provincia property.</param>
        public static ProvinciasEcuador CreateProvinciasEcuador(global::System.Int32 idProvincia, global::System.String provincia)
        {
            ProvinciasEcuador provinciasEcuador = new ProvinciasEcuador();
            provinciasEcuador.IdProvincia = idProvincia;
            provinciasEcuador.Provincia = provincia;
            return provinciasEcuador;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdProvincia
        {
            get
            {
                return _IdProvincia;
            }
            set
            {
                if (_IdProvincia != value)
                {
                    OnIdProvinciaChanging(value);
                    ReportPropertyChanging("IdProvincia");
                    _IdProvincia = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdProvincia");
                    OnIdProvinciaChanged();
                }
            }
        }
        private global::System.Int32 _IdProvincia;
        partial void OnIdProvinciaChanging(global::System.Int32 value);
        partial void OnIdProvinciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provincia
        {
            get
            {
                return _Provincia;
            }
            set
            {
                OnProvinciaChanging(value);
                ReportPropertyChanging("Provincia");
                _Provincia = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Provincia");
                OnProvinciaChanged();
            }
        }
        private global::System.String _Provincia;
        partial void OnProvinciaChanging(global::System.String value);
        partial void OnProvinciaChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="ReporteDetalleEquipos")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReporteDetalleEquipos : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReporteDetalleEquipos object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static ReporteDetalleEquipos CreateReporteDetalleEquipos(global::System.Int32 id)
        {
            ReporteDetalleEquipos reporteDetalleEquipos = new ReporteDetalleEquipos();
            reporteDetalleEquipos.id = id;
            return reporteDetalleEquipos;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Provincia
        {
            get
            {
                return _Provincia;
            }
            set
            {
                OnProvinciaChanging(value);
                ReportPropertyChanging("Provincia");
                _Provincia = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Provincia");
                OnProvinciaChanged();
            }
        }
        private global::System.String _Provincia;
        partial void OnProvinciaChanging(global::System.String value);
        partial void OnProvinciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ciudad
        {
            get
            {
                return _Ciudad;
            }
            set
            {
                OnCiudadChanging(value);
                ReportPropertyChanging("Ciudad");
                _Ciudad = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ciudad");
                OnCiudadChanged();
            }
        }
        private global::System.String _Ciudad;
        partial void OnCiudadChanging(global::System.String value);
        partial void OnCiudadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Agencia
        {
            get
            {
                return _Agencia;
            }
            set
            {
                OnAgenciaChanging(value);
                ReportPropertyChanging("Agencia");
                _Agencia = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Agencia");
                OnAgenciaChanged();
            }
        }
        private global::System.String _Agencia;
        partial void OnAgenciaChanging(global::System.String value);
        partial void OnAgenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subred
        {
            get
            {
                return _Subred;
            }
            set
            {
                OnSubredChanging(value);
                ReportPropertyChanging("Subred");
                _Subred = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subred");
                OnSubredChanged();
            }
        }
        private global::System.String _Subred;
        partial void OnSubredChanging(global::System.String value);
        partial void OnSubredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EstadoAgencia
        {
            get
            {
                return _EstadoAgencia;
            }
            set
            {
                OnEstadoAgenciaChanging(value);
                ReportPropertyChanging("EstadoAgencia");
                _EstadoAgencia = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EstadoAgencia");
                OnEstadoAgenciaChanged();
            }
        }
        private global::System.String _EstadoAgencia;
        partial void OnEstadoAgenciaChanging(global::System.String value);
        partial void OnEstadoAgenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Equipo
        {
            get
            {
                return _Equipo;
            }
            set
            {
                OnEquipoChanging(value);
                ReportPropertyChanging("Equipo");
                _Equipo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Equipo");
                OnEquipoChanged();
            }
        }
        private global::System.String _Equipo;
        partial void OnEquipoChanging(global::System.String value);
        partial void OnEquipoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ip
        {
            get
            {
                return _Ip;
            }
            set
            {
                OnIpChanging(value);
                ReportPropertyChanging("Ip");
                _Ip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ip");
                OnIpChanged();
            }
        }
        private global::System.String _Ip;
        partial void OnIpChanging(global::System.String value);
        partial void OnIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SistemaOperativo
        {
            get
            {
                return _SistemaOperativo;
            }
            set
            {
                OnSistemaOperativoChanging(value);
                ReportPropertyChanging("SistemaOperativo");
                _SistemaOperativo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SistemaOperativo");
                OnSistemaOperativoChanged();
            }
        }
        private global::System.String _SistemaOperativo;
        partial void OnSistemaOperativoChanging(global::System.String value);
        partial void OnSistemaOperativoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UltimoUsuarioLogeado
        {
            get
            {
                return _UltimoUsuarioLogeado;
            }
            set
            {
                OnUltimoUsuarioLogeadoChanging(value);
                ReportPropertyChanging("UltimoUsuarioLogeado");
                _UltimoUsuarioLogeado = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UltimoUsuarioLogeado");
                OnUltimoUsuarioLogeadoChanged();
            }
        }
        private global::System.String _UltimoUsuarioLogeado;
        partial void OnUltimoUsuarioLogeadoChanging(global::System.String value);
        partial void OnUltimoUsuarioLogeadoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FechaRegistro
        {
            get
            {
                return _FechaRegistro;
            }
            set
            {
                OnFechaRegistroChanging(value);
                ReportPropertyChanging("FechaRegistro");
                _FechaRegistro = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FechaRegistro");
                OnFechaRegistroChanged();
            }
        }
        private Nullable<global::System.DateTime> _FechaRegistro;
        partial void OnFechaRegistroChanging(Nullable<global::System.DateTime> value);
        partial void OnFechaRegistroChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FechaUltimaActividad
        {
            get
            {
                return _FechaUltimaActividad;
            }
            set
            {
                OnFechaUltimaActividadChanging(value);
                ReportPropertyChanging("FechaUltimaActividad");
                _FechaUltimaActividad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FechaUltimaActividad");
                OnFechaUltimaActividadChanged();
            }
        }
        private Nullable<global::System.DateTime> _FechaUltimaActividad;
        partial void OnFechaUltimaActividadChanging(Nullable<global::System.DateTime> value);
        partial void OnFechaUltimaActividadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EstadoAntivirus
        {
            get
            {
                return _EstadoAntivirus;
            }
            set
            {
                OnEstadoAntivirusChanging(value);
                ReportPropertyChanging("EstadoAntivirus");
                _EstadoAntivirus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EstadoAntivirus");
                OnEstadoAntivirusChanged();
            }
        }
        private global::System.String _EstadoAntivirus;
        partial void OnEstadoAntivirusChanging(global::System.String value);
        partial void OnEstadoAntivirusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FechaActualizaciónAntivirus
        {
            get
            {
                return _FechaActualizaciónAntivirus;
            }
            set
            {
                OnFechaActualizaciónAntivirusChanging(value);
                ReportPropertyChanging("FechaActualizaciónAntivirus");
                _FechaActualizaciónAntivirus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FechaActualizaciónAntivirus");
                OnFechaActualizaciónAntivirusChanged();
            }
        }
        private Nullable<global::System.DateTime> _FechaActualizaciónAntivirus;
        partial void OnFechaActualizaciónAntivirusChanging(Nullable<global::System.DateTime> value);
        partial void OnFechaActualizaciónAntivirusChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="Grupos_SelectAll")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Grupos_SelectAll : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Grupos_SelectAll object.
        /// </summary>
        /// <param name="grupo">Initial value of the Grupo property.</param>
        public static Grupos_SelectAll CreateGrupos_SelectAll(global::System.Int32 grupo)
        {
            Grupos_SelectAll grupos_SelectAll = new Grupos_SelectAll();
            grupos_SelectAll.Grupo = grupo;
            return grupos_SelectAll;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Grupo
        {
            get
            {
                return _Grupo;
            }
            set
            {
                OnGrupoChanging(value);
                ReportPropertyChanging("Grupo");
                _Grupo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Grupo");
                OnGrupoChanged();
            }
        }
        private global::System.Int32 _Grupo;
        partial void OnGrupoChanging(global::System.Int32 value);
        partial void OnGrupoChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="Log_RevisionEjecucion")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Log_RevisionEjecucion : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log_RevisionEjecucion object.
        /// </summary>
        /// <param name="segmentoEscaneado">Initial value of the SegmentoEscaneado property.</param>
        /// <param name="fecha">Initial value of the Fecha property.</param>
        public static Log_RevisionEjecucion CreateLog_RevisionEjecucion(global::System.String segmentoEscaneado, global::System.DateTime fecha)
        {
            Log_RevisionEjecucion log_RevisionEjecucion = new Log_RevisionEjecucion();
            log_RevisionEjecucion.SegmentoEscaneado = segmentoEscaneado;
            log_RevisionEjecucion.Fecha = fecha;
            return log_RevisionEjecucion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SegmentoEscaneado
        {
            get
            {
                return _SegmentoEscaneado;
            }
            set
            {
                OnSegmentoEscaneadoChanging(value);
                ReportPropertyChanging("SegmentoEscaneado");
                _SegmentoEscaneado = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SegmentoEscaneado");
                OnSegmentoEscaneadoChanged();
            }
        }
        private global::System.String _SegmentoEscaneado;
        partial void OnSegmentoEscaneadoChanging(global::System.String value);
        partial void OnSegmentoEscaneadoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NGroup
        {
            get
            {
                return _NGroup;
            }
            set
            {
                OnNGroupChanging(value);
                ReportPropertyChanging("NGroup");
                _NGroup = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NGroup");
                OnNGroupChanged();
            }
        }
        private global::System.String _NGroup;
        partial void OnNGroupChanging(global::System.String value);
        partial void OnNGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Fecha
        {
            get
            {
                return _Fecha;
            }
            set
            {
                OnFechaChanging(value);
                ReportPropertyChanging("Fecha");
                _Fecha = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fecha");
                OnFechaChanged();
            }
        }
        private global::System.DateTime _Fecha;
        partial void OnFechaChanging(global::System.DateTime value);
        partial void OnFechaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IpsActivas
        {
            get
            {
                return _IpsActivas;
            }
            set
            {
                OnIpsActivasChanging(value);
                ReportPropertyChanging("IpsActivas");
                _IpsActivas = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IpsActivas");
                OnIpsActivasChanged();
            }
        }
        private Nullable<global::System.Int32> _IpsActivas;
        partial void OnIpsActivasChanging(Nullable<global::System.Int32> value);
        partial void OnIpsActivasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IpsInvalidas
        {
            get
            {
                return _IpsInvalidas;
            }
            set
            {
                OnIpsInvalidasChanging(value);
                ReportPropertyChanging("IpsInvalidas");
                _IpsInvalidas = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IpsInvalidas");
                OnIpsInvalidasChanged();
            }
        }
        private Nullable<global::System.Int32> _IpsInvalidas;
        partial void OnIpsInvalidasChanging(Nullable<global::System.Int32> value);
        partial void OnIpsInvalidasChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="Reporte_AdministradoresNovedades_All")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Reporte_AdministradoresNovedades_All : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reporte_AdministradoresNovedades_All object.
        /// </summary>
        /// <param name="provincia">Initial value of the Provincia property.</param>
        /// <param name="ciudad">Initial value of the Ciudad property.</param>
        /// <param name="agencia">Initial value of the Agencia property.</param>
        /// <param name="subred">Initial value of the Subred property.</param>
        /// <param name="equipo">Initial value of the Equipo property.</param>
        /// <param name="ultimoUsuarioLogeado">Initial value of the UltimoUsuarioLogeado property.</param>
        /// <param name="administrador">Initial value of the Administrador property.</param>
        public static Reporte_AdministradoresNovedades_All CreateReporte_AdministradoresNovedades_All(global::System.String provincia, global::System.String ciudad, global::System.String agencia, global::System.String subred, global::System.String equipo, global::System.String ultimoUsuarioLogeado, global::System.String administrador)
        {
            Reporte_AdministradoresNovedades_All reporte_AdministradoresNovedades_All = new Reporte_AdministradoresNovedades_All();
            reporte_AdministradoresNovedades_All.Provincia = provincia;
            reporte_AdministradoresNovedades_All.Ciudad = ciudad;
            reporte_AdministradoresNovedades_All.Agencia = agencia;
            reporte_AdministradoresNovedades_All.Subred = subred;
            reporte_AdministradoresNovedades_All.Equipo = equipo;
            reporte_AdministradoresNovedades_All.UltimoUsuarioLogeado = ultimoUsuarioLogeado;
            reporte_AdministradoresNovedades_All.Administrador = administrador;
            return reporte_AdministradoresNovedades_All;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provincia
        {
            get
            {
                return _Provincia;
            }
            set
            {
                OnProvinciaChanging(value);
                ReportPropertyChanging("Provincia");
                _Provincia = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Provincia");
                OnProvinciaChanged();
            }
        }
        private global::System.String _Provincia;
        partial void OnProvinciaChanging(global::System.String value);
        partial void OnProvinciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ciudad
        {
            get
            {
                return _Ciudad;
            }
            set
            {
                OnCiudadChanging(value);
                ReportPropertyChanging("Ciudad");
                _Ciudad = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ciudad");
                OnCiudadChanged();
            }
        }
        private global::System.String _Ciudad;
        partial void OnCiudadChanging(global::System.String value);
        partial void OnCiudadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Agencia
        {
            get
            {
                return _Agencia;
            }
            set
            {
                OnAgenciaChanging(value);
                ReportPropertyChanging("Agencia");
                _Agencia = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Agencia");
                OnAgenciaChanged();
            }
        }
        private global::System.String _Agencia;
        partial void OnAgenciaChanging(global::System.String value);
        partial void OnAgenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subred
        {
            get
            {
                return _Subred;
            }
            set
            {
                OnSubredChanging(value);
                ReportPropertyChanging("Subred");
                _Subred = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subred");
                OnSubredChanged();
            }
        }
        private global::System.String _Subred;
        partial void OnSubredChanging(global::System.String value);
        partial void OnSubredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Equipo
        {
            get
            {
                return _Equipo;
            }
            set
            {
                OnEquipoChanging(value);
                ReportPropertyChanging("Equipo");
                _Equipo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Equipo");
                OnEquipoChanged();
            }
        }
        private global::System.String _Equipo;
        partial void OnEquipoChanging(global::System.String value);
        partial void OnEquipoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SistemaOperativo
        {
            get
            {
                return _SistemaOperativo;
            }
            set
            {
                OnSistemaOperativoChanging(value);
                ReportPropertyChanging("SistemaOperativo");
                _SistemaOperativo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SistemaOperativo");
                OnSistemaOperativoChanged();
            }
        }
        private global::System.String _SistemaOperativo;
        partial void OnSistemaOperativoChanging(global::System.String value);
        partial void OnSistemaOperativoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UltimoUsuarioLogeado
        {
            get
            {
                return _UltimoUsuarioLogeado;
            }
            set
            {
                OnUltimoUsuarioLogeadoChanging(value);
                ReportPropertyChanging("UltimoUsuarioLogeado");
                _UltimoUsuarioLogeado = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UltimoUsuarioLogeado");
                OnUltimoUsuarioLogeadoChanged();
            }
        }
        private global::System.String _UltimoUsuarioLogeado;
        partial void OnUltimoUsuarioLogeadoChanging(global::System.String value);
        partial void OnUltimoUsuarioLogeadoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Administrador
        {
            get
            {
                return _Administrador;
            }
            set
            {
                OnAdministradorChanging(value);
                ReportPropertyChanging("Administrador");
                _Administrador = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Administrador");
                OnAdministradorChanged();
            }
        }
        private global::System.String _Administrador;
        partial void OnAdministradorChanging(global::System.String value);
        partial void OnAdministradorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NovedadesReportadas
        {
            get
            {
                return _NovedadesReportadas;
            }
            set
            {
                OnNovedadesReportadasChanging(value);
                ReportPropertyChanging("NovedadesReportadas");
                _NovedadesReportadas = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NovedadesReportadas");
                OnNovedadesReportadasChanged();
            }
        }
        private Nullable<global::System.Int32> _NovedadesReportadas;
        partial void OnNovedadesReportadasChanging(Nullable<global::System.Int32> value);
        partial void OnNovedadesReportadasChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="Reporte_AdministradoresNovedades_ByEquipoYAdmin")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Reporte_AdministradoresNovedades_ByEquipoYAdmin : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reporte_AdministradoresNovedades_ByEquipoYAdmin object.
        /// </summary>
        /// <param name="provincia">Initial value of the Provincia property.</param>
        /// <param name="ciudad">Initial value of the Ciudad property.</param>
        /// <param name="agencia">Initial value of the Agencia property.</param>
        /// <param name="subred">Initial value of the Subred property.</param>
        /// <param name="grupo">Initial value of the Grupo property.</param>
        /// <param name="ip">Initial value of the Ip property.</param>
        /// <param name="equipo">Initial value of the Equipo property.</param>
        /// <param name="ultimoUsuarioLogeado">Initial value of the UltimoUsuarioLogeado property.</param>
        /// <param name="administrador">Initial value of the Administrador property.</param>
        /// <param name="fecha">Initial value of the Fecha property.</param>
        public static Reporte_AdministradoresNovedades_ByEquipoYAdmin CreateReporte_AdministradoresNovedades_ByEquipoYAdmin(global::System.String provincia, global::System.String ciudad, global::System.String agencia, global::System.String subred, global::System.Int32 grupo, global::System.String ip, global::System.String equipo, global::System.String ultimoUsuarioLogeado, global::System.String administrador, global::System.DateTime fecha)
        {
            Reporte_AdministradoresNovedades_ByEquipoYAdmin reporte_AdministradoresNovedades_ByEquipoYAdmin = new Reporte_AdministradoresNovedades_ByEquipoYAdmin();
            reporte_AdministradoresNovedades_ByEquipoYAdmin.Provincia = provincia;
            reporte_AdministradoresNovedades_ByEquipoYAdmin.Ciudad = ciudad;
            reporte_AdministradoresNovedades_ByEquipoYAdmin.Agencia = agencia;
            reporte_AdministradoresNovedades_ByEquipoYAdmin.Subred = subred;
            reporte_AdministradoresNovedades_ByEquipoYAdmin.Grupo = grupo;
            reporte_AdministradoresNovedades_ByEquipoYAdmin.Ip = ip;
            reporte_AdministradoresNovedades_ByEquipoYAdmin.Equipo = equipo;
            reporte_AdministradoresNovedades_ByEquipoYAdmin.UltimoUsuarioLogeado = ultimoUsuarioLogeado;
            reporte_AdministradoresNovedades_ByEquipoYAdmin.Administrador = administrador;
            reporte_AdministradoresNovedades_ByEquipoYAdmin.Fecha = fecha;
            return reporte_AdministradoresNovedades_ByEquipoYAdmin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provincia
        {
            get
            {
                return _Provincia;
            }
            set
            {
                OnProvinciaChanging(value);
                ReportPropertyChanging("Provincia");
                _Provincia = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Provincia");
                OnProvinciaChanged();
            }
        }
        private global::System.String _Provincia;
        partial void OnProvinciaChanging(global::System.String value);
        partial void OnProvinciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ciudad
        {
            get
            {
                return _Ciudad;
            }
            set
            {
                OnCiudadChanging(value);
                ReportPropertyChanging("Ciudad");
                _Ciudad = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ciudad");
                OnCiudadChanged();
            }
        }
        private global::System.String _Ciudad;
        partial void OnCiudadChanging(global::System.String value);
        partial void OnCiudadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Agencia
        {
            get
            {
                return _Agencia;
            }
            set
            {
                OnAgenciaChanging(value);
                ReportPropertyChanging("Agencia");
                _Agencia = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Agencia");
                OnAgenciaChanged();
            }
        }
        private global::System.String _Agencia;
        partial void OnAgenciaChanging(global::System.String value);
        partial void OnAgenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subred
        {
            get
            {
                return _Subred;
            }
            set
            {
                OnSubredChanging(value);
                ReportPropertyChanging("Subred");
                _Subred = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subred");
                OnSubredChanged();
            }
        }
        private global::System.String _Subred;
        partial void OnSubredChanging(global::System.String value);
        partial void OnSubredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Grupo
        {
            get
            {
                return _Grupo;
            }
            set
            {
                OnGrupoChanging(value);
                ReportPropertyChanging("Grupo");
                _Grupo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Grupo");
                OnGrupoChanged();
            }
        }
        private global::System.Int32 _Grupo;
        partial void OnGrupoChanging(global::System.Int32 value);
        partial void OnGrupoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ip
        {
            get
            {
                return _Ip;
            }
            set
            {
                OnIpChanging(value);
                ReportPropertyChanging("Ip");
                _Ip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ip");
                OnIpChanged();
            }
        }
        private global::System.String _Ip;
        partial void OnIpChanging(global::System.String value);
        partial void OnIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Equipo
        {
            get
            {
                return _Equipo;
            }
            set
            {
                OnEquipoChanging(value);
                ReportPropertyChanging("Equipo");
                _Equipo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Equipo");
                OnEquipoChanged();
            }
        }
        private global::System.String _Equipo;
        partial void OnEquipoChanging(global::System.String value);
        partial void OnEquipoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SistemaOperativo
        {
            get
            {
                return _SistemaOperativo;
            }
            set
            {
                OnSistemaOperativoChanging(value);
                ReportPropertyChanging("SistemaOperativo");
                _SistemaOperativo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SistemaOperativo");
                OnSistemaOperativoChanged();
            }
        }
        private global::System.String _SistemaOperativo;
        partial void OnSistemaOperativoChanging(global::System.String value);
        partial void OnSistemaOperativoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UltimoUsuarioLogeado
        {
            get
            {
                return _UltimoUsuarioLogeado;
            }
            set
            {
                OnUltimoUsuarioLogeadoChanging(value);
                ReportPropertyChanging("UltimoUsuarioLogeado");
                _UltimoUsuarioLogeado = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UltimoUsuarioLogeado");
                OnUltimoUsuarioLogeadoChanged();
            }
        }
        private global::System.String _UltimoUsuarioLogeado;
        partial void OnUltimoUsuarioLogeadoChanging(global::System.String value);
        partial void OnUltimoUsuarioLogeadoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Administrador
        {
            get
            {
                return _Administrador;
            }
            set
            {
                OnAdministradorChanging(value);
                ReportPropertyChanging("Administrador");
                _Administrador = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Administrador");
                OnAdministradorChanged();
            }
        }
        private global::System.String _Administrador;
        partial void OnAdministradorChanging(global::System.String value);
        partial void OnAdministradorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Fecha
        {
            get
            {
                return _Fecha;
            }
            set
            {
                OnFechaChanging(value);
                ReportPropertyChanging("Fecha");
                _Fecha = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fecha");
                OnFechaChanged();
            }
        }
        private global::System.DateTime _Fecha;
        partial void OnFechaChanging(global::System.DateTime value);
        partial void OnFechaChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="Reporte_AdmisAdd_Mensual")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Reporte_AdmisAdd_Mensual : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reporte_AdmisAdd_Mensual object.
        /// </summary>
        /// <param name="provincia">Initial value of the Provincia property.</param>
        /// <param name="ciudad">Initial value of the Ciudad property.</param>
        /// <param name="nombreAgencia">Initial value of the NombreAgencia property.</param>
        /// <param name="equipo">Initial value of the Equipo property.</param>
        /// <param name="ip">Initial value of the Ip property.</param>
        /// <param name="administrador">Initial value of the Administrador property.</param>
        public static Reporte_AdmisAdd_Mensual CreateReporte_AdmisAdd_Mensual(global::System.String provincia, global::System.String ciudad, global::System.String nombreAgencia, global::System.String equipo, global::System.String ip, global::System.String administrador)
        {
            Reporte_AdmisAdd_Mensual reporte_AdmisAdd_Mensual = new Reporte_AdmisAdd_Mensual();
            reporte_AdmisAdd_Mensual.Provincia = provincia;
            reporte_AdmisAdd_Mensual.Ciudad = ciudad;
            reporte_AdmisAdd_Mensual.NombreAgencia = nombreAgencia;
            reporte_AdmisAdd_Mensual.Equipo = equipo;
            reporte_AdmisAdd_Mensual.Ip = ip;
            reporte_AdmisAdd_Mensual.Administrador = administrador;
            return reporte_AdmisAdd_Mensual;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provincia
        {
            get
            {
                return _Provincia;
            }
            set
            {
                OnProvinciaChanging(value);
                ReportPropertyChanging("Provincia");
                _Provincia = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Provincia");
                OnProvinciaChanged();
            }
        }
        private global::System.String _Provincia;
        partial void OnProvinciaChanging(global::System.String value);
        partial void OnProvinciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ciudad
        {
            get
            {
                return _Ciudad;
            }
            set
            {
                OnCiudadChanging(value);
                ReportPropertyChanging("Ciudad");
                _Ciudad = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ciudad");
                OnCiudadChanged();
            }
        }
        private global::System.String _Ciudad;
        partial void OnCiudadChanging(global::System.String value);
        partial void OnCiudadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NombreAgencia
        {
            get
            {
                return _NombreAgencia;
            }
            set
            {
                OnNombreAgenciaChanging(value);
                ReportPropertyChanging("NombreAgencia");
                _NombreAgencia = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NombreAgencia");
                OnNombreAgenciaChanged();
            }
        }
        private global::System.String _NombreAgencia;
        partial void OnNombreAgenciaChanging(global::System.String value);
        partial void OnNombreAgenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Equipo
        {
            get
            {
                return _Equipo;
            }
            set
            {
                OnEquipoChanging(value);
                ReportPropertyChanging("Equipo");
                _Equipo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Equipo");
                OnEquipoChanged();
            }
        }
        private global::System.String _Equipo;
        partial void OnEquipoChanging(global::System.String value);
        partial void OnEquipoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ip
        {
            get
            {
                return _Ip;
            }
            set
            {
                OnIpChanging(value);
                ReportPropertyChanging("Ip");
                _Ip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ip");
                OnIpChanged();
            }
        }
        private global::System.String _Ip;
        partial void OnIpChanging(global::System.String value);
        partial void OnIpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Administrador
        {
            get
            {
                return _Administrador;
            }
            set
            {
                OnAdministradorChanging(value);
                ReportPropertyChanging("Administrador");
                _Administrador = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Administrador");
                OnAdministradorChanged();
            }
        }
        private global::System.String _Administrador;
        partial void OnAdministradorChanging(global::System.String value);
        partial void OnAdministradorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FechaDeteccion
        {
            get
            {
                return _FechaDeteccion;
            }
            set
            {
                OnFechaDeteccionChanging(value);
                ReportPropertyChanging("FechaDeteccion");
                _FechaDeteccion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FechaDeteccion");
                OnFechaDeteccionChanged();
            }
        }
        private Nullable<global::System.DateTime> _FechaDeteccion;
        partial void OnFechaDeteccionChanging(Nullable<global::System.DateTime> value);
        partial void OnFechaDeteccionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="Reporte_EquiposDetalle_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Reporte_EquiposDetalle_Result : ComplexObject
    {
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="ControlAdministradoresModel", Name="Reporte_EquiposPorAgenciaTotal")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Reporte_EquiposPorAgenciaTotal : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reporte_EquiposPorAgenciaTotal object.
        /// </summary>
        /// <param name="provincia">Initial value of the Provincia property.</param>
        /// <param name="ciudad">Initial value of the Ciudad property.</param>
        /// <param name="agencia">Initial value of the Agencia property.</param>
        /// <param name="subred">Initial value of the Subred property.</param>
        public static Reporte_EquiposPorAgenciaTotal CreateReporte_EquiposPorAgenciaTotal(global::System.String provincia, global::System.String ciudad, global::System.String agencia, global::System.String subred)
        {
            Reporte_EquiposPorAgenciaTotal reporte_EquiposPorAgenciaTotal = new Reporte_EquiposPorAgenciaTotal();
            reporte_EquiposPorAgenciaTotal.Provincia = provincia;
            reporte_EquiposPorAgenciaTotal.Ciudad = ciudad;
            reporte_EquiposPorAgenciaTotal.Agencia = agencia;
            reporte_EquiposPorAgenciaTotal.Subred = subred;
            return reporte_EquiposPorAgenciaTotal;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provincia
        {
            get
            {
                return _Provincia;
            }
            set
            {
                OnProvinciaChanging(value);
                ReportPropertyChanging("Provincia");
                _Provincia = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Provincia");
                OnProvinciaChanged();
            }
        }
        private global::System.String _Provincia;
        partial void OnProvinciaChanging(global::System.String value);
        partial void OnProvinciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Ciudad
        {
            get
            {
                return _Ciudad;
            }
            set
            {
                OnCiudadChanging(value);
                ReportPropertyChanging("Ciudad");
                _Ciudad = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Ciudad");
                OnCiudadChanged();
            }
        }
        private global::System.String _Ciudad;
        partial void OnCiudadChanging(global::System.String value);
        partial void OnCiudadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Agencia
        {
            get
            {
                return _Agencia;
            }
            set
            {
                OnAgenciaChanging(value);
                ReportPropertyChanging("Agencia");
                _Agencia = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Agencia");
                OnAgenciaChanged();
            }
        }
        private global::System.String _Agencia;
        partial void OnAgenciaChanging(global::System.String value);
        partial void OnAgenciaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subred
        {
            get
            {
                return _Subred;
            }
            set
            {
                OnSubredChanging(value);
                ReportPropertyChanging("Subred");
                _Subred = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subred");
                OnSubredChanged();
            }
        }
        private global::System.String _Subred;
        partial void OnSubredChanging(global::System.String value);
        partial void OnSubredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Equipos
        {
            get
            {
                return _Equipos;
            }
            set
            {
                OnEquiposChanging(value);
                ReportPropertyChanging("Equipos");
                _Equipos = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Equipos");
                OnEquiposChanged();
            }
        }
        private Nullable<global::System.Int32> _Equipos;
        partial void OnEquiposChanging(Nullable<global::System.Int32> value);
        partial void OnEquiposChanged();

        #endregion

    }

    #endregion

    
}
